[
  {
    "tags": {},
    "filePath": "../src/components/ui/badge/badge.tsx",
    "description": "Displays a Badge",
    "displayName": "Badge",
    "methods": [],
    "props": {}
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/modal/modal.tsx",
    "description": "",
    "displayName": "Modal",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/modal/modal.tsx",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/modal/modal.tsx",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "isEntering": {
        "defaultValue": null,
        "description": "Whether the modal is currently performing an entry animation.",
        "name": "isEntering",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isExiting": {
        "defaultValue": null,
        "description": "Whether the modal is currently performing an exit animation.",
        "name": "isExiting",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "UNSTABLE_portalContainer": {
        "defaultValue": {
          "value": "document.body"
        },
        "description": "The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.",
        "name": "UNSTABLE_portalContainer",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "Element"
        }
      },
      "isDismissable": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether to close the modal when the user interacts outside it.",
        "name": "isDismissable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isKeyboardDismissDisabled": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether pressing the escape key to close the modal should be disabled.",
        "name": "isKeyboardDismissDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "shouldCloseOnInteractOutside": {
        "defaultValue": null,
        "description": "When user interacts with the argument element outside of the overlay ref,\nreturn true if onClose should be called.  This gives you a chance to filter\nout interaction with elements that should not dismiss the overlay.\nBy default, onClose will always be called on interaction outside the overlay ref.",
        "name": "shouldCloseOnInteractOutside",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(element: Element) => boolean"
        }
      },
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: ModalRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: ModalRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/modal/modal.tsx",
    "description": "A DialogTrigger opens a dialog when a trigger element is pressed.",
    "displayName": "DialogTrigger",
    "methods": [],
    "props": {
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/select/select.tsx",
    "description": "",
    "displayName": "Select",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "The styles to be applied to the select field.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/select/select.tsx",
          "name": "SelectProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/select/select.tsx",
            "name": "SelectProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "items": {
        "defaultValue": null,
        "description": "Array of select options.",
        "name": "items",
        "parent": {
          "fileName": "../src/components/ui/select/select.tsx",
          "name": "SelectProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/select/select.tsx",
            "name": "SelectProps"
          }
        ],
        "required": false,
        "type": {
          "name": "Iterable<T>"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "A helper text to be displayed below the select field.",
        "name": "helperText",
        "parent": {
          "fileName": "../src/components/ui/select/select.tsx",
          "name": "SelectProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/select/select.tsx",
            "name": "SelectProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "errorMessage": {
        "defaultValue": null,
        "description": "The tooltip to be displayed when hovering over the select field.",
        "name": "errorMessage",
        "parent": {
          "fileName": "../src/components/ui/select/select.tsx",
          "name": "SelectProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/select/select.tsx",
            "name": "SelectProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Children of the select field.",
        "name": "children",
        "parent": {
          "fileName": "../src/components/ui/select/select.tsx",
          "name": "SelectProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/select/select.tsx",
            "name": "SelectProps"
          }
        ],
        "required": true,
        "type": {
          "name": "ReactNode | ((item: T) => ReactNode)"
        }
      },
      "autoFocus": {
        "defaultValue": null,
        "description": "Whether the element should receive focus on render.",
        "name": "autoFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusableProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusableProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: SelectRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Handler that is called when the element receives focus.",
        "name": "onFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Handler that is called when the element loses focus.",
        "name": "onBlur",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onKeyDown": {
        "defaultValue": null,
        "description": "Handler that is called when a key is pressed.",
        "name": "onKeyDown",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "onKeyUp": {
        "defaultValue": null,
        "description": "Handler that is called when a key is released.",
        "name": "onKeyUp",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the input is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the element's focus status changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isFocused: boolean) => void"
        }
      },
      "excludeFromTabOrder": {
        "defaultValue": null,
        "description": "Whether to exclude the element from the sequential tab order. If true,\nthe element will not be focusable via the keyboard by tabbing. This should\nbe avoided except in rare scenarios where an alternative means of accessing\nthe element or its functionality via the keyboard is available.",
        "name": "excludeFromTabOrder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "FocusableDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "FocusableDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "disabledKeys": {
        "defaultValue": null,
        "description": "The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",
        "name": "disabledKeys",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/collections.d.ts",
          "name": "CollectionBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/collections.d.ts",
            "name": "CollectionBase"
          }
        ],
        "required": false,
        "type": {
          "name": "Iterable<Key>"
        }
      },
      "isOpen": {
        "defaultValue": null,
        "description": "Sets the open state of the menu.",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+select@3.9.3_react@18.3.1/node_modules/@react-types/select/src/index.d.ts",
          "name": "SelectProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+select@3.9.3_react@18.3.1/node_modules/@react-types/select/src/index.d.ts",
            "name": "SelectProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Sets the default open state of the menu.",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+select@3.9.3_react@18.3.1/node_modules/@react-types/select/src/index.d.ts",
          "name": "SelectProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+select@3.9.3_react@18.3.1/node_modules/@react-types/select/src/index.d.ts",
            "name": "SelectProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Method that is called when the open state of the menu changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+select@3.9.3_react@18.3.1/node_modules/@react-types/select/src/index.d.ts",
          "name": "SelectProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+select@3.9.3_react@18.3.1/node_modules/@react-types/select/src/index.d.ts",
            "name": "SelectProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      },
      "validationBehavior": {
        "defaultValue": {
          "value": "'native'"
        },
        "description": "Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.",
        "name": "validationBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RACValidation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RACValidation"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"native\" | \"aria\"",
          "value": [
            {
              "value": "\"native\""
            },
            {
              "value": "\"aria\""
            }
          ]
        }
      },
      "selectedKey": {
        "defaultValue": null,
        "description": "The currently selected key in the collection (controlled).",
        "name": "selectedKey",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/selection.d.ts",
          "name": "SingleSelection"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/selection.d.ts",
            "name": "SingleSelection"
          }
        ],
        "required": false,
        "type": {
          "name": "Key"
        }
      },
      "defaultSelectedKey": {
        "defaultValue": null,
        "description": "The initial selected key in the collection (uncontrolled).",
        "name": "defaultSelectedKey",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/selection.d.ts",
          "name": "SingleSelection"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/selection.d.ts",
            "name": "SingleSelection"
          }
        ],
        "required": false,
        "type": {
          "name": "Key"
        }
      },
      "onSelectionChange": {
        "defaultValue": null,
        "description": "Handler that is called when the selection changes.",
        "name": "onSelectionChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/selection.d.ts",
          "name": "SingleSelection"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/selection.d.ts",
            "name": "SingleSelection"
          }
        ],
        "required": false,
        "type": {
          "name": "(key: Key) => void"
        }
      },
      "autoComplete": {
        "defaultValue": null,
        "description": "Describes the type of autocomplete functionality the input should provide if any. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefautocomplete).",
        "name": "autoComplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+select@3.9.3_react@18.3.1/node_modules/@react-types/select/src/index.d.ts",
          "name": "AriaSelectProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+select@3.9.3_react@18.3.1/node_modules/@react-types/select/src/index.d.ts",
            "name": "AriaSelectProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "The name of the input, used when submitting an HTML form.",
        "name": "name",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+select@3.9.3_react@18.3.1/node_modules/@react-types/select/src/index.d.ts",
          "name": "AriaSelectProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+select@3.9.3_react@18.3.1/node_modules/@react-types/select/src/index.d.ts",
            "name": "AriaSelectProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "isRequired": {
        "defaultValue": null,
        "description": "Whether user input is required on the input before form submission.",
        "name": "isRequired",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isInvalid": {
        "defaultValue": null,
        "description": "Whether the input value is invalid.",
        "name": "isInvalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "validate": {
        "defaultValue": null,
        "description": "A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.",
        "name": "validate",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: Key) => true | ValidationError"
        }
      },
      "placeholder": {
        "defaultValue": null,
        "description": "Temporary text that occupies the text input when it is empty.",
        "name": "placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "TextInputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "TextInputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/checkbox-group/checkbox-group.tsx",
    "description": "",
    "displayName": "CheckboxGroup",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "The className of the checkbox group.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/checkbox-group/checkbox-group.tsx",
          "name": "CheckboxGroupProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/checkbox-group/checkbox-group.tsx",
            "name": "CheckboxGroupProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Checkbox or any other components to render in the checkbox group.",
        "name": "children",
        "parent": {
          "fileName": "../src/components/ui/checkbox-group/checkbox-group.tsx",
          "name": "CheckboxGroupProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/checkbox-group/checkbox-group.tsx",
            "name": "CheckboxGroupProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "A subtle description next to the checkbox groups label.",
        "name": "helperText",
        "parent": {
          "fileName": "../src/components/ui/checkbox-group/checkbox-group.tsx",
          "name": "CheckboxGroupProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/checkbox-group/checkbox-group.tsx",
            "name": "CheckboxGroupProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "errorMessage": {
        "defaultValue": null,
        "description": "The error message of the checkbox group.",
        "name": "errorMessage",
        "parent": {
          "fileName": "../src/components/ui/checkbox-group/checkbox-group.tsx",
          "name": "CheckboxGroupProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/checkbox-group/checkbox-group.tsx",
            "name": "CheckboxGroupProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "The default value (uncontrolled).",
        "name": "defaultValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "string[]"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: CheckboxGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaValidationProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaValidationProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Handler that is called when the element receives focus.",
        "name": "onFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Handler that is called when the element loses focus.",
        "name": "onBlur",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Handler that is called when the value changes.",
        "name": "onChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: string[]) => void"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the input is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the element's focus status changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isFocused: boolean) => void"
        }
      },
      "validationBehavior": {
        "defaultValue": {
          "value": "'native'"
        },
        "description": "Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.",
        "name": "validationBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RACValidation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RACValidation"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"native\" | \"aria\"",
          "value": [
            {
              "value": "\"native\""
            },
            {
              "value": "\"aria\""
            }
          ]
        }
      },
      "isReadOnly": {
        "defaultValue": null,
        "description": "Whether the input can be selected but not changed by the user.",
        "name": "isReadOnly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",
        "name": "name",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "InputDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "InputDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "isRequired": {
        "defaultValue": null,
        "description": "Whether user input is required on the input before form submission.",
        "name": "isRequired",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isInvalid": {
        "defaultValue": null,
        "description": "Whether the input value is invalid.",
        "name": "isInvalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "validate": {
        "defaultValue": null,
        "description": "A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.",
        "name": "validate",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: string[]) => true | ValidationError"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The current value (controlled).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "string[]"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/radio-group/radio-group.tsx",
    "description": "",
    "displayName": "Radio",
    "methods": [],
    "props": {
      "showRadio": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Whether the radio should be shown.",
        "name": "showRadio",
        "parent": {
          "fileName": "../src/components/ui/radio-group/radio-group.tsx",
          "name": "RadioProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/radio-group/radio-group.tsx",
            "name": "RadioProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "inputRef": {
        "defaultValue": null,
        "description": "A ref for the HTML input element.",
        "name": "inputRef",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RadioProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RadioProps"
          }
        ],
        "required": false,
        "type": {
          "name": "MutableRefObject<HTMLInputElement>"
        }
      },
      "autoFocus": {
        "defaultValue": null,
        "description": "Whether the element should receive focus on render.",
        "name": "autoFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusableProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusableProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Handler that is called when the element receives focus.",
        "name": "onFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Handler that is called when the element loses focus.",
        "name": "onBlur",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onKeyDown": {
        "defaultValue": null,
        "description": "Handler that is called when a key is pressed.",
        "name": "onKeyDown",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "onKeyUp": {
        "defaultValue": null,
        "description": "Handler that is called when a key is released.",
        "name": "onKeyUp",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the radio button is disabled or not.\nShows that a selection exists, but is not available in that circumstance.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+radio@3.8.0_react@18.3.1/node_modules/@react-types/radio/src/index.d.ts",
          "name": "RadioProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+radio@3.8.0_react@18.3.1/node_modules/@react-types/radio/src/index.d.ts",
            "name": "RadioProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the element's focus status changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isFocused: boolean) => void"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The value of the radio button, used when submitting an HTML form.\nSee [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/radio#Value).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+radio@3.8.0_react@18.3.1/node_modules/@react-types/radio/src/index.d.ts",
          "name": "RadioProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+radio@3.8.0_react@18.3.1/node_modules/@react-types/radio/src/index.d.ts",
            "name": "RadioProps"
          }
        ],
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "onHoverStart": {
        "defaultValue": null,
        "description": "Handler that is called when a hover interaction starts.",
        "name": "onHoverStart",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "HoverEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "HoverEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: HoverEvent) => void"
        }
      },
      "onHoverEnd": {
        "defaultValue": null,
        "description": "Handler that is called when a hover interaction ends.",
        "name": "onHoverEnd",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "HoverEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "HoverEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: HoverEvent) => void"
        }
      },
      "onHoverChange": {
        "defaultValue": null,
        "description": "Handler that is called when the hover state changes.",
        "name": "onHoverChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "HoverEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "HoverEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isHovering: boolean) => void"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: RadioRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((values: RadioRenderProps & { defaultClassName: string; }) => string)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: RadioRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/radio-group/radio-group.tsx",
    "description": "",
    "displayName": "RadioGroup",
    "methods": [],
    "props": {
      "children": {
        "defaultValue": null,
        "description": "The children of the radio group.",
        "name": "children",
        "parent": {
          "fileName": "../src/components/ui/radio-group/radio-group.tsx",
          "name": "RadioGroupProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/radio-group/radio-group.tsx",
            "name": "RadioGroupProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "The helper text to display below the radio group.",
        "name": "helperText",
        "parent": {
          "fileName": "../src/components/ui/radio-group/radio-group.tsx",
          "name": "RadioGroupProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/radio-group/radio-group.tsx",
            "name": "RadioGroupProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "errorMessage": {
        "defaultValue": null,
        "description": "The error message to display below the radio group.",
        "name": "errorMessage",
        "parent": {
          "fileName": "../src/components/ui/radio-group/radio-group.tsx",
          "name": "RadioGroupProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/radio-group/radio-group.tsx",
            "name": "RadioGroupProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((validation: ValidationResult) => string)"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "The default value (uncontrolled).",
        "name": "defaultValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaValidationProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaValidationProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Handler that is called when the element receives focus.",
        "name": "onFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Handler that is called when the element loses focus.",
        "name": "onBlur",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Handler that is called when the value changes.",
        "name": "onChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: string) => void"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the input is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the element's focus status changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isFocused: boolean) => void"
        }
      },
      "isReadOnly": {
        "defaultValue": null,
        "description": "Whether the input can be selected but not changed by the user.",
        "name": "isReadOnly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",
        "name": "name",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "InputDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "InputDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "isRequired": {
        "defaultValue": null,
        "description": "Whether user input is required on the input before form submission.",
        "name": "isRequired",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isInvalid": {
        "defaultValue": null,
        "description": "Whether the input value is invalid.",
        "name": "isInvalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "validate": {
        "defaultValue": null,
        "description": "A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.",
        "name": "validate",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: string) => true | ValidationError"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The current value (controlled).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "orientation": {
        "defaultValue": {
          "value": "vertical"
        },
        "description": "The axis the Radio Button(s) should align with.",
        "name": "orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+radio@3.8.0_react@18.3.1/node_modules/@react-types/radio/src/index.d.ts",
          "name": "RadioGroupProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+radio@3.8.0_react@18.3.1/node_modules/@react-types/radio/src/index.d.ts",
            "name": "RadioGroupProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Orientation",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "validationBehavior": {
        "defaultValue": {
          "value": "'native'"
        },
        "description": "Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.",
        "name": "validationBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RACValidation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RACValidation"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"native\" | \"aria\"",
          "value": [
            {
              "value": "\"native\""
            },
            {
              "value": "\"aria\""
            }
          ]
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((values: RadioGroupRenderProps & { defaultClassName: string; }) => string)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: RadioGroupRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/combo-box/combo-box.tsx",
    "description": "",
    "displayName": "ComboBox",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "The styles of the combo box.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/combo-box/combo-box.tsx",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/combo-box/combo-box.tsx",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "The description of the combo box.",
        "name": "helperText",
        "parent": {
          "fileName": "../src/components/ui/combo-box/combo-box.tsx",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/combo-box/combo-box.tsx",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "errorMessage": {
        "defaultValue": null,
        "description": "The error message to display if the combo box is invalid.",
        "name": "errorMessage",
        "parent": {
          "fileName": "../src/components/ui/combo-box/combo-box.tsx",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/combo-box/combo-box.tsx",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The combo box items.",
        "name": "children",
        "parent": {
          "fileName": "../src/components/ui/combo-box/combo-box.tsx",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/combo-box/combo-box.tsx",
            "name": "ComboBoxProps"
          }
        ],
        "required": true,
        "type": {
          "name": "ReactNode | ((item: T) => ReactNode)"
        }
      },
      "autoFocus": {
        "defaultValue": null,
        "description": "Whether the element should receive focus on render.",
        "name": "autoFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusableProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusableProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: ComboBoxRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Handler that is called when the element receives focus.",
        "name": "onFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<HTMLInputElement, Element>) => void"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Handler that is called when the element loses focus.",
        "name": "onBlur",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<HTMLInputElement, Element>) => void"
        }
      },
      "onKeyDown": {
        "defaultValue": null,
        "description": "Handler that is called when a key is pressed.",
        "name": "onKeyDown",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "onKeyUp": {
        "defaultValue": null,
        "description": "Handler that is called when a key is released.",
        "name": "onKeyUp",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the input is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the element's focus status changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isFocused: boolean) => void"
        }
      },
      "disabledKeys": {
        "defaultValue": null,
        "description": "The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",
        "name": "disabledKeys",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/collections.d.ts",
          "name": "CollectionBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/collections.d.ts",
            "name": "CollectionBase"
          }
        ],
        "required": false,
        "type": {
          "name": "Iterable<Key>"
        }
      },
      "items": {
        "defaultValue": null,
        "description": "The list of ComboBox items (controlled).",
        "name": "items",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "Iterable<T>"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Method that is called when the open state of the menu changes. Returns the new open state and the action that caused the opening of the menu.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean, menuTrigger?: MenuTriggerAction) => void"
        }
      },
      "validationBehavior": {
        "defaultValue": {
          "value": "'native'"
        },
        "description": "Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.",
        "name": "validationBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RACValidation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RACValidation"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"native\" | \"aria\"",
          "value": [
            {
              "value": "\"native\""
            },
            {
              "value": "\"aria\""
            }
          ]
        }
      },
      "isReadOnly": {
        "defaultValue": null,
        "description": "Whether the input can be selected but not changed by the user.",
        "name": "isReadOnly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "selectedKey": {
        "defaultValue": null,
        "description": "The currently selected key in the collection (controlled).",
        "name": "selectedKey",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/selection.d.ts",
          "name": "SingleSelection"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/selection.d.ts",
            "name": "SingleSelection"
          }
        ],
        "required": false,
        "type": {
          "name": "Key"
        }
      },
      "defaultSelectedKey": {
        "defaultValue": null,
        "description": "The initial selected key in the collection (uncontrolled).",
        "name": "defaultSelectedKey",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/selection.d.ts",
          "name": "SingleSelection"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/selection.d.ts",
            "name": "SingleSelection"
          }
        ],
        "required": false,
        "type": {
          "name": "Key"
        }
      },
      "onSelectionChange": {
        "defaultValue": null,
        "description": "Handler that is called when the selection changes.",
        "name": "onSelectionChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(key: Key) => void"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",
        "name": "name",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "InputDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "InputDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "isRequired": {
        "defaultValue": null,
        "description": "Whether user input is required on the input before form submission.",
        "name": "isRequired",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isInvalid": {
        "defaultValue": null,
        "description": "Whether the input value is invalid.",
        "name": "isInvalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "validate": {
        "defaultValue": null,
        "description": "A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.",
        "name": "validate",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: ComboBoxValidationValue) => true | ValidationError"
        }
      },
      "shouldFocusWrap": {
        "defaultValue": null,
        "description": "Whether keyboard navigation is circular.",
        "name": "shouldFocusWrap",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
          "name": "AriaComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
            "name": "AriaComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultItems": {
        "defaultValue": null,
        "description": "The list of ComboBox items (uncontrolled).",
        "name": "defaultItems",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "Iterable<T>"
        }
      },
      "inputValue": {
        "defaultValue": null,
        "description": "The value of the ComboBox input (controlled).",
        "name": "inputValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "defaultInputValue": {
        "defaultValue": null,
        "description": "The default value of the ComboBox input (uncontrolled).",
        "name": "defaultInputValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onInputChange": {
        "defaultValue": null,
        "description": "Handler that is called when the ComboBox input value changes.",
        "name": "onInputChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: string) => void"
        }
      },
      "allowsCustomValue": {
        "defaultValue": null,
        "description": "Whether the ComboBox allows a non-item matching input value to be set.",
        "name": "allowsCustomValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "menuTrigger": {
        "defaultValue": {
          "value": "'input'"
        },
        "description": "The interaction required to display the ComboBox menu.",
        "name": "menuTrigger",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+combobox@3.11.0_react@18.3.1/node_modules/@react-types/combobox/src/index.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "MenuTriggerAction",
          "value": [
            {
              "value": "\"input\""
            },
            {
              "value": "\"focus\""
            },
            {
              "value": "\"manual\""
            }
          ]
        }
      },
      "defaultFilter": {
        "defaultValue": null,
        "description": "The filter function used to determine if a option should be included in the combo box list.",
        "name": "defaultFilter",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(textValue: string, inputValue: string) => boolean"
        }
      },
      "formValue": {
        "defaultValue": {
          "value": "'key'"
        },
        "description": "Whether the text or key of the selected item is submitted as part of an HTML form.\nWhen `allowsCustomValue` is `true`, this option does not apply and the text is always submitted.",
        "name": "formValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"key\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"key\""
            }
          ]
        }
      },
      "allowsEmptyCollection": {
        "defaultValue": null,
        "description": "Whether the combo box allows the menu to be open when the collection is empty.",
        "name": "allowsEmptyCollection",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ComboBoxProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ComboBoxProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/switch/switch.tsx",
    "description": "",
    "displayName": "Switch",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "The styles to be applied to the switch field,",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/switch/switch.tsx",
          "name": "SwitchProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/switch/switch.tsx",
            "name": "SwitchProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "A helper text to be displayed below the switch field.",
        "name": "helperText",
        "parent": {
          "fileName": "../src/components/ui/switch/switch.tsx",
          "name": "SwitchProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/switch/switch.tsx",
            "name": "SwitchProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "errorMessage": {
        "defaultValue": null,
        "description": "The error message to be displayed when the switch is in an error state.",
        "name": "errorMessage",
        "parent": {
          "fileName": "../src/components/ui/switch/switch.tsx",
          "name": "SwitchProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/switch/switch.tsx",
            "name": "SwitchProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "inputRef": {
        "defaultValue": null,
        "description": "A ref for the HTML input element.",
        "name": "inputRef",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SwitchProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SwitchProps"
          }
        ],
        "required": false,
        "type": {
          "name": "MutableRefObject<HTMLInputElement>"
        }
      },
      "autoFocus": {
        "defaultValue": null,
        "description": "Whether the element should receive focus on render.",
        "name": "autoFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusableProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusableProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+switch@3.5.2_react@18.3.1/node_modules/@react-types/switch/src/index.d.ts",
          "name": "AriaSwitchBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+switch@3.5.2_react@18.3.1/node_modules/@react-types/switch/src/index.d.ts",
            "name": "AriaSwitchBase"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Handler that is called when the element receives focus.",
        "name": "onFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Handler that is called when the element loses focus.",
        "name": "onBlur",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Handler that is called when the Switch's selection state changes.",
        "name": "onChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+switch@3.5.2_react@18.3.1/node_modules/@react-types/switch/src/index.d.ts",
          "name": "SwitchBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+switch@3.5.2_react@18.3.1/node_modules/@react-types/switch/src/index.d.ts",
            "name": "SwitchBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(isSelected: boolean) => void"
        }
      },
      "onKeyDown": {
        "defaultValue": null,
        "description": "Handler that is called when a key is pressed.",
        "name": "onKeyDown",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "onKeyUp": {
        "defaultValue": null,
        "description": "Handler that is called when a key is released.",
        "name": "onKeyUp",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "isSelected": {
        "defaultValue": null,
        "description": "Whether the Switch should be selected (controlled).",
        "name": "isSelected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+switch@3.5.2_react@18.3.1/node_modules/@react-types/switch/src/index.d.ts",
          "name": "SwitchBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+switch@3.5.2_react@18.3.1/node_modules/@react-types/switch/src/index.d.ts",
            "name": "SwitchBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultSelected": {
        "defaultValue": null,
        "description": "Whether the Switch should be selected (uncontrolled).",
        "name": "defaultSelected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+switch@3.5.2_react@18.3.1/node_modules/@react-types/switch/src/index.d.ts",
          "name": "SwitchBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+switch@3.5.2_react@18.3.1/node_modules/@react-types/switch/src/index.d.ts",
            "name": "SwitchBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the input is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the element's focus status changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isFocused: boolean) => void"
        }
      },
      "excludeFromTabOrder": {
        "defaultValue": null,
        "description": "Whether to exclude the element from the sequential tab order. If true,\nthe element will not be focusable via the keyboard by tabbing. This should\nbe avoided except in rare scenarios where an alternative means of accessing\nthe element or its functionality via the keyboard is available.",
        "name": "excludeFromTabOrder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "FocusableDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "FocusableDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isReadOnly": {
        "defaultValue": null,
        "description": "Whether the input can be selected but not changed by the user.",
        "name": "isReadOnly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",
        "name": "name",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "InputDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "InputDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The value of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefvalue).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+switch@3.5.2_react@18.3.1/node_modules/@react-types/switch/src/index.d.ts",
          "name": "SwitchBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+switch@3.5.2_react@18.3.1/node_modules/@react-types/switch/src/index.d.ts",
            "name": "SwitchBase"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onHoverStart": {
        "defaultValue": null,
        "description": "Handler that is called when a hover interaction starts.",
        "name": "onHoverStart",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "HoverEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "HoverEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: HoverEvent) => void"
        }
      },
      "onHoverEnd": {
        "defaultValue": null,
        "description": "Handler that is called when a hover interaction ends.",
        "name": "onHoverEnd",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "HoverEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "HoverEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: HoverEvent) => void"
        }
      },
      "onHoverChange": {
        "defaultValue": null,
        "description": "Handler that is called when the hover state changes.",
        "name": "onHoverChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "HoverEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "HoverEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isHovering: boolean) => void"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: SwitchRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: SwitchRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/typography/typography.tsx",
    "description": "",
    "displayName": "Typography",
    "methods": [],
    "props": {
      "as": {
        "defaultValue": null,
        "description": "The HTML tag to be used for the typography.",
        "name": "as",
        "declarations": [
          {
            "fileName": "../src/components/ui/typography/typography.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "ElementType<any, keyof IntrinsicElements>"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the typography.",
        "name": "children",
        "declarations": [
          {
            "fileName": "../src/components/ui/typography/typography.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": true,
        "type": {
          "name": "ReactNode"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/range-calendar/range-calendar.tsx",
    "description": "",
    "displayName": "RangeCalendar",
    "methods": [],
    "props": {
      "error": {
        "defaultValue": null,
        "description": "The error message to display when the date picker is invalid.",
        "name": "error",
        "parent": {
          "fileName": "../src/components/ui/range-calendar/range-calendar.tsx",
          "name": "RangeCalendarProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/range-calendar/range-calendar.tsx",
            "name": "RangeCalendarProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The className to apply styles to the component.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/range-calendar/range-calendar.tsx",
          "name": "RangeCalendarProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/range-calendar/range-calendar.tsx",
            "name": "RangeCalendarProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: RangeCalendarRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "The default value (uncontrolled).",
        "name": "defaultValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "RangeValue<DateValue>"
        }
      },
      "autoFocus": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether to automatically focus the calendar when it mounts.",
        "name": "autoFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: RangeCalendarRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Handler that is called when the value changes.",
        "name": "onChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: RangeValue<DateValue>) => void"
        }
      },
      "isDisabled": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether the calendar is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the focused date changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(date: CalendarDate) => void"
        }
      },
      "isReadOnly": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether the calendar value is immutable.",
        "name": "isReadOnly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isInvalid": {
        "defaultValue": null,
        "description": "Whether the current selection is invalid according to application logic.",
        "name": "isInvalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The current value (controlled).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "RangeValue<DateValue>"
        }
      },
      "allowsNonContiguousRanges": {
        "defaultValue": null,
        "description": "When combined with `isDateUnavailable`, determines whether non-contiguous ranges,\ni.e. ranges containing unavailable dates, may be selected.",
        "name": "allowsNonContiguousRanges",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "RangeCalendarProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "RangeCalendarProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "minValue": {
        "defaultValue": null,
        "description": "The minimum allowed date that a user may select.",
        "name": "minValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "maxValue": {
        "defaultValue": null,
        "description": "The maximum allowed date that a user may select.",
        "name": "maxValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "isDateUnavailable": {
        "defaultValue": null,
        "description": "Callback that is called for each date of the calendar. If it returns true, then the date is unavailable.",
        "name": "isDateUnavailable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(date: DateValue) => boolean"
        }
      },
      "focusedValue": {
        "defaultValue": null,
        "description": "Controls the currently focused date within the calendar.",
        "name": "focusedValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "defaultFocusedValue": {
        "defaultValue": null,
        "description": "The date that is focused when the calendar first mounts (uncountrolled).",
        "name": "defaultFocusedValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "pageBehavior": {
        "defaultValue": {
          "value": "visible"
        },
        "description": "Controls the behavior of paging. Pagination either works by advancing the visible page by visibleDuration (default) or one unit of visibleDuration.",
        "name": "pageBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "PageBehavior",
          "value": [
            {
              "value": "\"single\""
            },
            {
              "value": "\"visible\""
            }
          ]
        }
      },
      "visibleDuration": {
        "defaultValue": {
          "value": "{months: 1}"
        },
        "description": "The amount of days that will be displayed at once. This affects how pagination works.",
        "name": "visibleDuration",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RangeCalendarProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RangeCalendarProps"
          }
        ],
        "required": false,
        "type": {
          "name": "DateDuration"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/date-picker/date-picker.tsx",
    "description": "",
    "displayName": "DatePicker",
    "methods": [],
    "props": {
      "helperText": {
        "defaultValue": null,
        "description": "A helper text to display below the date picker.",
        "name": "helperText",
        "parent": {
          "fileName": "../src/components/ui/date-picker/date-picker.tsx",
          "name": "DatePickerProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/date-picker/date-picker.tsx",
            "name": "DatePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "errorMessage": {
        "defaultValue": null,
        "description": "The error message to display when the date picker is invalid.",
        "name": "errorMessage",
        "parent": {
          "fileName": "../src/components/ui/date-picker/date-picker.tsx",
          "name": "DatePickerProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/date-picker/date-picker.tsx",
            "name": "DatePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((validation: ValidationResult) => string)"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "The default value (uncontrolled).",
        "name": "defaultValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "autoFocus": {
        "defaultValue": null,
        "description": "Whether the element should receive focus on render.",
        "name": "autoFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusableProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusableProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Handler that is called when the element receives focus.",
        "name": "onFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Handler that is called when the element loses focus.",
        "name": "onBlur",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Handler that is called when the value changes.",
        "name": "onChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: MappedDateValue<T>) => void"
        }
      },
      "onKeyDown": {
        "defaultValue": null,
        "description": "Handler that is called when a key is pressed.",
        "name": "onKeyDown",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "onKeyUp": {
        "defaultValue": null,
        "description": "Handler that is called when a key is released.",
        "name": "onKeyUp",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the input is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the element's focus status changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isFocused: boolean) => void"
        }
      },
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      },
      "isReadOnly": {
        "defaultValue": null,
        "description": "Whether the input can be selected but not changed by the user.",
        "name": "isReadOnly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",
        "name": "name",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "InputDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "InputDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "isRequired": {
        "defaultValue": null,
        "description": "Whether user input is required on the input before form submission.",
        "name": "isRequired",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isInvalid": {
        "defaultValue": null,
        "description": "Whether the input value is invalid.",
        "name": "isInvalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "validate": {
        "defaultValue": null,
        "description": "A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.",
        "name": "validate",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: MappedDateValue<T>) => true | ValidationError"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The current value (controlled).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "minValue": {
        "defaultValue": null,
        "description": "The minimum allowed date that a user may select.",
        "name": "minValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "maxValue": {
        "defaultValue": null,
        "description": "The maximum allowed date that a user may select.",
        "name": "maxValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "isDateUnavailable": {
        "defaultValue": null,
        "description": "Callback that is called for each date of the calendar. If it returns true, then the date is unavailable.",
        "name": "isDateUnavailable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(date: DateValue) => boolean"
        }
      },
      "pageBehavior": {
        "defaultValue": {
          "value": "visible"
        },
        "description": "Controls the behavior of paging. Pagination either works by advancing the visible page by visibleDuration (default) or one unit of visibleDuration.",
        "name": "pageBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DatePickerBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DatePickerBase"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "PageBehavior",
          "value": [
            {
              "value": "\"single\""
            },
            {
              "value": "\"visible\""
            }
          ]
        }
      },
      "placeholderValue": {
        "defaultValue": null,
        "description": "A placeholder date that influences the format of the placeholder shown when no value is selected. Defaults to today's date at midnight.",
        "name": "placeholderValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "hourCycle": {
        "defaultValue": null,
        "description": "Whether to display the time in 12 or 24 hour format. By default, this is determined by the user's locale.",
        "name": "hourCycle",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "12 | 24",
          "value": [
            {
              "value": "12"
            },
            {
              "value": "24"
            }
          ]
        }
      },
      "granularity": {
        "defaultValue": null,
        "description": "Determines the smallest unit that is displayed in the date picker. By default, this is `\"day\"` for dates, and `\"minute\"` for times.",
        "name": "granularity",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Granularity",
          "value": [
            {
              "value": "\"day\""
            },
            {
              "value": "\"hour\""
            },
            {
              "value": "\"minute\""
            },
            {
              "value": "\"second\""
            }
          ]
        }
      },
      "hideTimeZone": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether to hide the time zone abbreviation.",
        "name": "hideTimeZone",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "shouldForceLeadingZeros": {
        "defaultValue": null,
        "description": "Whether to always show leading zeros in the month, day, and hour fields.\nBy default, this is determined by the user's locale.",
        "name": "shouldForceLeadingZeros",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "shouldCloseOnSelect": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether the date picker popover should close automatically when a date is selected.",
        "name": "shouldCloseOnSelect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-stately+datepicker@3.9.3_react@18.3.1/node_modules/@react-stately/datepicker/dist/types.d.ts",
          "name": "DatePickerStateOptions"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-stately+datepicker@3.9.3_react@18.3.1/node_modules/@react-stately/datepicker/dist/types.d.ts",
            "name": "DatePickerStateOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | (() => boolean)"
        }
      },
      "validationBehavior": {
        "defaultValue": {
          "value": "'native'"
        },
        "description": "Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.",
        "name": "validationBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RACValidation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RACValidation"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"native\" | \"aria\"",
          "value": [
            {
              "value": "\"native\""
            },
            {
              "value": "\"aria\""
            }
          ]
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: DatePickerRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((values: DatePickerRenderProps & { defaultClassName: string; }) => string)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: DatePickerRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/link/link.tsx",
    "description": "",
    "displayName": "Link",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "The styles of the link.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/link/link.tsx",
          "name": "LinkProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/link/link.tsx",
            "name": "LinkProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "autoFocus": {
        "defaultValue": null,
        "description": "Whether the element should receive focus on render.",
        "name": "autoFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusableProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusableProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "rel": {
        "defaultValue": null,
        "description": "The relationship between the linked resource and the current page. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel).",
        "name": "rel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "LinkDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "LinkDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Handler that is called when the element receives focus.",
        "name": "onFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Handler that is called when the element loses focus.",
        "name": "onBlur",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onKeyDown": {
        "defaultValue": null,
        "description": "Handler that is called when a key is pressed.",
        "name": "onKeyDown",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "onKeyUp": {
        "defaultValue": null,
        "description": "Handler that is called when a key is released.",
        "name": "onKeyUp",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the link is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+link@3.7.0_react@18.3.1/node_modules/@react-aria/link/dist/types.d.ts",
          "name": "AriaLinkOptions"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+link@3.7.0_react@18.3.1/node_modules/@react-aria/link/dist/types.d.ts",
            "name": "AriaLinkOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onPress": {
        "defaultValue": null,
        "description": "Handler that is called when the press is released over the target.",
        "name": "onPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "PressEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "PressEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: PressEvent) => void"
        }
      },
      "onPressStart": {
        "defaultValue": null,
        "description": "Handler that is called when a press interaction starts.",
        "name": "onPressStart",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "PressEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "PressEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: PressEvent) => void"
        }
      },
      "onPressEnd": {
        "defaultValue": null,
        "description": "Handler that is called when a press interaction ends, either\nover the target or when the pointer leaves the target.",
        "name": "onPressEnd",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "PressEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "PressEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: PressEvent) => void"
        }
      },
      "onPressChange": {
        "defaultValue": null,
        "description": "Handler that is called when the press state changes.",
        "name": "onPressChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "PressEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "PressEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isPressed: boolean) => void"
        }
      },
      "onPressUp": {
        "defaultValue": null,
        "description": "Handler that is called when a press is released over the target, regardless of\nwhether it started on the target or not.",
        "name": "onPressUp",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "PressEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "PressEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: PressEvent) => void"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the element's focus status changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isFocused: boolean) => void"
        }
      },
      "href": {
        "defaultValue": null,
        "description": "A URL to link to. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#href).",
        "name": "href",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "LinkDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "LinkDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "hrefLang": {
        "defaultValue": null,
        "description": "Hints at the human language of the linked URL. See[MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#hreflang).",
        "name": "hrefLang",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "LinkDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "LinkDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "target": {
        "defaultValue": null,
        "description": "The target window for the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target).",
        "name": "target",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "LinkDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "LinkDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "HTMLAttributeAnchorTarget"
        }
      },
      "download": {
        "defaultValue": null,
        "description": "Causes the browser to download the linked URL. A string may be provided to suggest a file name. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#download).",
        "name": "download",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "LinkDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "LinkDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | boolean"
        }
      },
      "ping": {
        "defaultValue": null,
        "description": "A space-separated list of URLs to ping when the link is followed. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping).",
        "name": "ping",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "LinkDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "LinkDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "referrerPolicy": {
        "defaultValue": null,
        "description": "How much of the referrer to send when following the link. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#referrerpolicy).",
        "name": "referrerPolicy",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "LinkDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "LinkDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "HTMLAttributeReferrerPolicy",
          "value": [
            {
              "value": "\"\""
            },
            {
              "value": "\"origin\""
            },
            {
              "value": "\"no-referrer\""
            },
            {
              "value": "\"no-referrer-when-downgrade\""
            },
            {
              "value": "\"origin-when-cross-origin\""
            },
            {
              "value": "\"same-origin\""
            },
            {
              "value": "\"strict-origin\""
            },
            {
              "value": "\"strict-origin-when-cross-origin\""
            },
            {
              "value": "\"unsafe-url\""
            }
          ]
        }
      },
      "routerOptions": {
        "defaultValue": null,
        "description": "Options for the configured client side router.",
        "name": "routerOptions",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "LinkDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "LinkDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "never"
        }
      },
      "onHoverStart": {
        "defaultValue": null,
        "description": "Handler that is called when a hover interaction starts.",
        "name": "onHoverStart",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "HoverEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "HoverEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: HoverEvent) => void"
        }
      },
      "onHoverEnd": {
        "defaultValue": null,
        "description": "Handler that is called when a hover interaction ends.",
        "name": "onHoverEnd",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "HoverEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "HoverEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: HoverEvent) => void"
        }
      },
      "onHoverChange": {
        "defaultValue": null,
        "description": "Handler that is called when the hover state changes.",
        "name": "onHoverChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "HoverEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "HoverEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isHovering: boolean) => void"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: LinkRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: LinkRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/button/button.tsx",
    "description": "",
    "displayName": "Button",
    "methods": [],
    "props": {
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "LegacyRef<HTMLButtonElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/loading-spinner/loading-spinner.tsx",
    "description": "",
    "displayName": "LoadingSpinner",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "The styles of the loading spinner.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/loading-spinner/loading-spinner.tsx",
          "name": "LoadingSpinnerProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/loading-spinner/loading-spinner.tsx",
            "name": "LoadingSpinnerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "icon": {
        "defaultValue": null,
        "description": "The loading spinner icon to display.",
        "name": "icon",
        "parent": {
          "fileName": "../src/components/ui/loading-spinner/loading-spinner.tsx",
          "name": "LoadingSpinnerProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/loading-spinner/loading-spinner.tsx",
            "name": "LoadingSpinnerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactElement<HTMLElement, string | JSXElementConstructor<any>>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/popover/popover.tsx",
    "description": "",
    "displayName": "Popover",
    "methods": [],
    "props": {
      "trigger": {
        "defaultValue": null,
        "description": "The name of the component that triggered the popover. This is reflected on the element\nas the `data-trigger` attribute, and can be used to provide specific\nstyles for the popover depending on which element triggered it.",
        "name": "trigger",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "triggerRef": {
        "defaultValue": null,
        "description": "The ref for the element which the popover positions itself with respect to.\n\nWhen used within a trigger component such as DialogTrigger, MenuTrigger, Select, etc.,\nthis is set automatically. It is only required when used standalone.",
        "name": "triggerRef",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "RefObject<Element>"
        }
      },
      "isEntering": {
        "defaultValue": null,
        "description": "Whether the popover is currently performing an entry animation.",
        "name": "isEntering",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isExiting": {
        "defaultValue": null,
        "description": "Whether the popover is currently performing an exit animation.",
        "name": "isExiting",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "UNSTABLE_portalContainer": {
        "defaultValue": {
          "value": "document.body"
        },
        "description": "The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.",
        "name": "UNSTABLE_portalContainer",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "Element"
        }
      },
      "offset": {
        "defaultValue": {
          "value": "4"
        },
        "description": "The additional offset applied along the main axis between the element and its\nanchor element.",
        "name": "offset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "placement": {
        "defaultValue": {
          "value": "'bottom'"
        },
        "description": "The placement of the element with respect to its anchor element.",
        "name": "placement",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Placement",
          "value": [
            {
              "value": "\"end\""
            },
            {
              "value": "\"bottom\""
            },
            {
              "value": "\"bottom left\""
            },
            {
              "value": "\"bottom right\""
            },
            {
              "value": "\"bottom start\""
            },
            {
              "value": "\"bottom end\""
            },
            {
              "value": "\"top\""
            },
            {
              "value": "\"top left\""
            },
            {
              "value": "\"top right\""
            },
            {
              "value": "\"top start\""
            },
            {
              "value": "\"top end\""
            },
            {
              "value": "\"left\""
            },
            {
              "value": "\"left top\""
            },
            {
              "value": "\"left bottom\""
            },
            {
              "value": "\"start\""
            },
            {
              "value": "\"start top\""
            },
            {
              "value": "\"start bottom\""
            },
            {
              "value": "\"right\""
            },
            {
              "value": "\"right top\""
            },
            {
              "value": "\"right bottom\""
            },
            {
              "value": "\"end top\""
            },
            {
              "value": "\"end bottom\""
            }
          ]
        }
      },
      "containerPadding": {
        "defaultValue": {
          "value": "12"
        },
        "description": "The placement padding that should be applied between the element and its\nsurrounding container.",
        "name": "containerPadding",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "crossOffset": {
        "defaultValue": {
          "value": "0"
        },
        "description": "The additional offset applied along the cross axis between the element and its\nanchor element.",
        "name": "crossOffset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "shouldFlip": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Whether the element should flip its orientation (e.g. top to bottom or left to right) when\nthere is insufficient room for it to render completely.",
        "name": "shouldFlip",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "shouldCloseOnInteractOutside": {
        "defaultValue": null,
        "description": "When user interacts with the argument element outside of the popover ref,\nreturn true if onClose should be called. This gives you a chance to filter\nout interaction with elements that should not dismiss the popover.\nBy default, onClose will always be called on interaction outside the popover ref.",
        "name": "shouldCloseOnInteractOutside",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(element: Element) => boolean"
        }
      },
      "isKeyboardDismissDisabled": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether pressing the escape key to close the popover should be disabled.\n\nMost popovers should not use this option. When set to true, an alternative\nway to close the popover with a keyboard must be provided.",
        "name": "isKeyboardDismissDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "boundaryElement": {
        "defaultValue": {
          "value": "document.body"
        },
        "description": "Element that that serves as the positioning boundary.",
        "name": "boundaryElement",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "Element"
        }
      },
      "scrollRef": {
        "defaultValue": {
          "value": "overlayRef"
        },
        "description": "A ref for the scrollable region within the overlay.",
        "name": "scrollRef",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "RefObject<Element>"
        }
      },
      "shouldUpdatePosition": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Whether the overlay should update its position automatically.",
        "name": "shouldUpdatePosition",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "maxHeight": {
        "defaultValue": null,
        "description": "The maxHeight specified for the overlay element.\nBy default, it will take all space up to the current viewport height.",
        "name": "maxHeight",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "arrowBoundaryOffset": {
        "defaultValue": {
          "value": "0"
        },
        "description": "The minimum distance the arrow's edge should be from the edge of the overlay element.",
        "name": "arrowBoundaryOffset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "isNonModal": {
        "defaultValue": null,
        "description": "Whether the popover is non-modal, i.e. elements outside the popover may be\ninteracted with by assistive technologies.\n\nMost popovers should not use this option as it may negatively impact the screen\nreader experience. Only use with components such as combobox, which are designed\nto handle this situation carefully.",
        "name": "isNonModal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: PopoverRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((values: PopoverRenderProps & { defaultClassName: string; }) => string)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: PopoverRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/popover/popover.tsx",
    "description": "",
    "displayName": "PopoverContent",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "Class name to apply to the Dialog.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/dialog/dialog.tsx",
          "name": "DialogContentProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/dialog/dialog.tsx",
            "name": "DialogContentProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "closeButtonClassName": {
        "defaultValue": null,
        "description": "Class name to apply to the close button.",
        "name": "closeButtonClassName",
        "parent": {
          "fileName": "../src/components/ui/dialog/dialog.tsx",
          "name": "DialogContentProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/dialog/dialog.tsx",
            "name": "DialogContentProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "hideCloseButton": {
        "defaultValue": null,
        "description": "Hides default close button. It will not affect the functionality of the ESC key!",
        "name": "hideCloseButton",
        "parent": {
          "fileName": "../src/components/ui/dialog/dialog.tsx",
          "name": "DialogContentProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/dialog/dialog.tsx",
            "name": "DialogContentProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Children of the dialog. A function may be provided to access a function to close the dialog.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "DialogProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "DialogProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((opts: DialogRenderProps) => ReactNode)"
        }
      },
      "role": {
        "defaultValue": {
          "value": "'dialog'"
        },
        "description": "The accessibility role for the dialog.",
        "name": "role",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+dialog@3.5.9_react@18.3.1/node_modules/@react-types/dialog/src/index.d.ts",
          "name": "AriaDialogProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+dialog@3.5.9_react@18.3.1/node_modules/@react-types/dialog/src/index.d.ts",
            "name": "AriaDialogProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"dialog\" | \"alertdialog\"",
          "value": [
            {
              "value": "\"dialog\""
            },
            {
              "value": "\"alertdialog\""
            }
          ]
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/popover/popover.tsx",
    "description": "",
    "displayName": "PopoverRoot",
    "methods": [],
    "props": {
      "trigger": {
        "defaultValue": null,
        "description": "The name of the component that triggered the popover. This is reflected on the element\nas the `data-trigger` attribute, and can be used to provide specific\nstyles for the popover depending on which element triggered it.",
        "name": "trigger",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "triggerRef": {
        "defaultValue": null,
        "description": "The ref for the element which the popover positions itself with respect to.\n\nWhen used within a trigger component such as DialogTrigger, MenuTrigger, Select, etc.,\nthis is set automatically. It is only required when used standalone.",
        "name": "triggerRef",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "RefObject<Element>"
        }
      },
      "isEntering": {
        "defaultValue": null,
        "description": "Whether the popover is currently performing an entry animation.",
        "name": "isEntering",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isExiting": {
        "defaultValue": null,
        "description": "Whether the popover is currently performing an exit animation.",
        "name": "isExiting",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "UNSTABLE_portalContainer": {
        "defaultValue": {
          "value": "document.body"
        },
        "description": "The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.",
        "name": "UNSTABLE_portalContainer",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "Element"
        }
      },
      "offset": {
        "defaultValue": {
          "value": "4"
        },
        "description": "The additional offset applied along the main axis between the element and its\nanchor element.",
        "name": "offset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "PopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "PopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "placement": {
        "defaultValue": {
          "value": "'bottom'"
        },
        "description": "The placement of the element with respect to its anchor element.",
        "name": "placement",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Placement",
          "value": [
            {
              "value": "\"end\""
            },
            {
              "value": "\"bottom\""
            },
            {
              "value": "\"bottom left\""
            },
            {
              "value": "\"bottom right\""
            },
            {
              "value": "\"bottom start\""
            },
            {
              "value": "\"bottom end\""
            },
            {
              "value": "\"top\""
            },
            {
              "value": "\"top left\""
            },
            {
              "value": "\"top right\""
            },
            {
              "value": "\"top start\""
            },
            {
              "value": "\"top end\""
            },
            {
              "value": "\"left\""
            },
            {
              "value": "\"left top\""
            },
            {
              "value": "\"left bottom\""
            },
            {
              "value": "\"start\""
            },
            {
              "value": "\"start top\""
            },
            {
              "value": "\"start bottom\""
            },
            {
              "value": "\"right\""
            },
            {
              "value": "\"right top\""
            },
            {
              "value": "\"right bottom\""
            },
            {
              "value": "\"end top\""
            },
            {
              "value": "\"end bottom\""
            }
          ]
        }
      },
      "containerPadding": {
        "defaultValue": {
          "value": "12"
        },
        "description": "The placement padding that should be applied between the element and its\nsurrounding container.",
        "name": "containerPadding",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "crossOffset": {
        "defaultValue": {
          "value": "0"
        },
        "description": "The additional offset applied along the cross axis between the element and its\nanchor element.",
        "name": "crossOffset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "shouldFlip": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Whether the element should flip its orientation (e.g. top to bottom or left to right) when\nthere is insufficient room for it to render completely.",
        "name": "shouldFlip",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "shouldCloseOnInteractOutside": {
        "defaultValue": null,
        "description": "When user interacts with the argument element outside of the popover ref,\nreturn true if onClose should be called. This gives you a chance to filter\nout interaction with elements that should not dismiss the popover.\nBy default, onClose will always be called on interaction outside the popover ref.",
        "name": "shouldCloseOnInteractOutside",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(element: Element) => boolean"
        }
      },
      "isKeyboardDismissDisabled": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether pressing the escape key to close the popover should be disabled.\n\nMost popovers should not use this option. When set to true, an alternative\nway to close the popover with a keyboard must be provided.",
        "name": "isKeyboardDismissDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "boundaryElement": {
        "defaultValue": {
          "value": "document.body"
        },
        "description": "Element that that serves as the positioning boundary.",
        "name": "boundaryElement",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "Element"
        }
      },
      "scrollRef": {
        "defaultValue": {
          "value": "overlayRef"
        },
        "description": "A ref for the scrollable region within the overlay.",
        "name": "scrollRef",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "RefObject<Element>"
        }
      },
      "shouldUpdatePosition": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Whether the overlay should update its position automatically.",
        "name": "shouldUpdatePosition",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "maxHeight": {
        "defaultValue": null,
        "description": "The maxHeight specified for the overlay element.\nBy default, it will take all space up to the current viewport height.",
        "name": "maxHeight",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "arrowBoundaryOffset": {
        "defaultValue": {
          "value": "0"
        },
        "description": "The minimum distance the arrow's edge should be from the edge of the overlay element.",
        "name": "arrowBoundaryOffset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "isNonModal": {
        "defaultValue": null,
        "description": "Whether the popover is non-modal, i.e. elements outside the popover may be\ninteracted with by assistive technologies.\n\nMost popovers should not use this option as it may negatively impact the screen\nreader experience. Only use with components such as combobox, which are designed\nto handle this situation carefully.",
        "name": "isNonModal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPopoverProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPopoverProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: PopoverRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((values: PopoverRenderProps & { defaultClassName: string; }) => string)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: PopoverRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/popover/popover.tsx",
    "description": "A DialogTrigger opens a dialog when a trigger element is pressed.",
    "displayName": "DialogTrigger",
    "methods": [],
    "props": {
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/dialog/dialog.tsx",
    "description": "",
    "displayName": "Dialog",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/modal/modal.tsx",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/modal/modal.tsx",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "isEntering": {
        "defaultValue": null,
        "description": "Whether the modal is currently performing an entry animation.",
        "name": "isEntering",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isExiting": {
        "defaultValue": null,
        "description": "Whether the modal is currently performing an exit animation.",
        "name": "isExiting",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "UNSTABLE_portalContainer": {
        "defaultValue": {
          "value": "document.body"
        },
        "description": "The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.",
        "name": "UNSTABLE_portalContainer",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "Element"
        }
      },
      "isDismissable": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether to close the modal when the user interacts outside it.",
        "name": "isDismissable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isKeyboardDismissDisabled": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether pressing the escape key to close the modal should be disabled.",
        "name": "isKeyboardDismissDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "shouldCloseOnInteractOutside": {
        "defaultValue": null,
        "description": "When user interacts with the argument element outside of the overlay ref,\nreturn true if onClose should be called.  This gives you a chance to filter\nout interaction with elements that should not dismiss the overlay.\nBy default, onClose will always be called on interaction outside the overlay ref.",
        "name": "shouldCloseOnInteractOutside",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(element: Element) => boolean"
        }
      },
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: ModalRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: ModalRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/dialog/dialog.tsx",
    "description": "",
    "displayName": "DialogContent",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "Class name to apply to the Dialog.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/dialog/dialog.tsx",
          "name": "DialogContentProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/dialog/dialog.tsx",
            "name": "DialogContentProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "closeButtonClassName": {
        "defaultValue": null,
        "description": "Class name to apply to the close button.",
        "name": "closeButtonClassName",
        "parent": {
          "fileName": "../src/components/ui/dialog/dialog.tsx",
          "name": "DialogContentProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/dialog/dialog.tsx",
            "name": "DialogContentProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "hideCloseButton": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Hides default close button. It will not affect the functionality of the ESC key!",
        "name": "hideCloseButton",
        "parent": {
          "fileName": "../src/components/ui/dialog/dialog.tsx",
          "name": "DialogContentProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/dialog/dialog.tsx",
            "name": "DialogContentProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Children of the dialog. A function may be provided to access a function to close the dialog.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "DialogProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "DialogProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((opts: DialogRenderProps) => ReactNode)"
        }
      },
      "role": {
        "defaultValue": {
          "value": "'dialog'"
        },
        "description": "The accessibility role for the dialog.",
        "name": "role",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+dialog@3.5.9_react@18.3.1/node_modules/@react-types/dialog/src/index.d.ts",
          "name": "AriaDialogProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+dialog@3.5.9_react@18.3.1/node_modules/@react-types/dialog/src/index.d.ts",
            "name": "AriaDialogProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"dialog\" | \"alertdialog\"",
          "value": [
            {
              "value": "\"dialog\""
            },
            {
              "value": "\"alertdialog\""
            }
          ]
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/dialog/dialog.tsx",
    "description": "",
    "displayName": "DialogHeader",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/dialog/dialog.tsx",
    "description": "",
    "displayName": "DialogTitle",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/dialog/dialog.tsx",
    "description": "A DialogTrigger opens a dialog when a trigger element is pressed.",
    "displayName": "DialogTrigger",
    "methods": [],
    "props": {
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/dialog/dialog.tsx",
    "description": "",
    "displayName": "DialogFooter",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/time-field/time-field.tsx",
    "description": "",
    "displayName": "TimeField",
    "methods": [],
    "props": {
      "label": {
        "defaultValue": null,
        "description": "A label to be displayed above the time field",
        "name": "label",
        "parent": {
          "fileName": "../src/components/ui/time-field/time-field.tsx",
          "name": "TimeFieldProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/time-field/time-field.tsx",
            "name": "TimeFieldProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "helperText": {
        "defaultValue": null,
        "description": "A helper text to be displayed below the time field",
        "name": "helperText",
        "parent": {
          "fileName": "../src/components/ui/time-field/time-field.tsx",
          "name": "TimeFieldProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/time-field/time-field.tsx",
            "name": "TimeFieldProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "errorMessage": {
        "defaultValue": null,
        "description": "The error message to be displayed when the time field is in an error state",
        "name": "errorMessage",
        "parent": {
          "fileName": "../src/components/ui/time-field/time-field.tsx",
          "name": "TimeFieldProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/time-field/time-field.tsx",
            "name": "TimeFieldProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((validation: ValidationResult) => string)"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "The default value (uncontrolled).",
        "name": "defaultValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "TimeValue"
        }
      },
      "autoFocus": {
        "defaultValue": null,
        "description": "Whether the element should receive focus on render.",
        "name": "autoFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusableProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusableProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Handler that is called when the element receives focus.",
        "name": "onFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Handler that is called when the element loses focus.",
        "name": "onBlur",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Handler that is called when the value changes.",
        "name": "onChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: MappedTimeValue<T>) => void"
        }
      },
      "onKeyDown": {
        "defaultValue": null,
        "description": "Handler that is called when a key is pressed.",
        "name": "onKeyDown",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "onKeyUp": {
        "defaultValue": null,
        "description": "Handler that is called when a key is released.",
        "name": "onKeyUp",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the input is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the element's focus status changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isFocused: boolean) => void"
        }
      },
      "isReadOnly": {
        "defaultValue": null,
        "description": "Whether the input can be selected but not changed by the user.",
        "name": "isReadOnly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",
        "name": "name",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "InputDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "InputDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "isRequired": {
        "defaultValue": null,
        "description": "Whether user input is required on the input before form submission.",
        "name": "isRequired",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isInvalid": {
        "defaultValue": null,
        "description": "Whether the input value is invalid.",
        "name": "isInvalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "validate": {
        "defaultValue": null,
        "description": "A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.",
        "name": "validate",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: MappedTimeValue<T>) => true | ValidationError"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The current value (controlled).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "TimeValue"
        }
      },
      "minValue": {
        "defaultValue": null,
        "description": "The minimum allowed time that a user may select.",
        "name": "minValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "TimePickerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "TimePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "TimeValue"
        }
      },
      "maxValue": {
        "defaultValue": null,
        "description": "The maximum allowed time that a user may select.",
        "name": "maxValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "TimePickerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "TimePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "TimeValue"
        }
      },
      "placeholderValue": {
        "defaultValue": null,
        "description": "A placeholder time that influences the format of the placeholder shown when no value is selected.\nDefaults to 12:00 AM or 00:00 depending on the hour cycle.",
        "name": "placeholderValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "TimePickerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "TimePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "TimeValue"
        }
      },
      "hourCycle": {
        "defaultValue": null,
        "description": "Whether to display the time in 12 or 24 hour format. By default, this is determined by the user's locale.",
        "name": "hourCycle",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "TimePickerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "TimePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "12 | 24",
          "value": [
            {
              "value": "12"
            },
            {
              "value": "24"
            }
          ]
        }
      },
      "granularity": {
        "defaultValue": {
          "value": "'minute'"
        },
        "description": "Determines the smallest unit that is displayed in the time picker.",
        "name": "granularity",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "TimePickerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "TimePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"hour\" | \"minute\" | \"second\"",
          "value": [
            {
              "value": "\"hour\""
            },
            {
              "value": "\"minute\""
            },
            {
              "value": "\"second\""
            }
          ]
        }
      },
      "hideTimeZone": {
        "defaultValue": null,
        "description": "Whether to hide the time zone abbreviation.",
        "name": "hideTimeZone",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "TimePickerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "TimePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "shouldForceLeadingZeros": {
        "defaultValue": null,
        "description": "Whether to always show leading zeros in the hour field.\nBy default, this is determined by the user's locale.",
        "name": "shouldForceLeadingZeros",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "TimePickerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "TimePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "validationBehavior": {
        "defaultValue": {
          "value": "'native'"
        },
        "description": "Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.",
        "name": "validationBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RACValidation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RACValidation"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"native\" | \"aria\"",
          "value": [
            {
              "value": "\"native\""
            },
            {
              "value": "\"aria\""
            }
          ]
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: DateFieldRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((values: DateFieldRenderProps & { defaultClassName: string; }) => string)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: DateFieldRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/file-trigger/file-trigger.tsx",
    "description": "",
    "displayName": "FileTrigger",
    "methods": [],
    "props": {
      "acceptedFileTypes": {
        "defaultValue": null,
        "description": "Specifies what mime type of files are allowed.",
        "name": "acceptedFileTypes",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "FileTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "FileTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string[]"
        }
      },
      "allowsMultiple": {
        "defaultValue": null,
        "description": "Whether multiple files can be selected.",
        "name": "allowsMultiple",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "FileTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "FileTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultCamera": {
        "defaultValue": null,
        "description": "Specifies the use of a media capture mechanism to capture the media on the spot.",
        "name": "defaultCamera",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "FileTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "FileTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"user\" | \"environment\"",
          "value": [
            {
              "value": "\"user\""
            },
            {
              "value": "\"environment\""
            }
          ]
        }
      },
      "onSelect": {
        "defaultValue": null,
        "description": "Handler when a user selects a file.",
        "name": "onSelect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "FileTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "FileTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(files: FileList) => void"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "FileTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "FileTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "acceptDirectory": {
        "defaultValue": null,
        "description": "Enables the selection of directories instead of individual files.",
        "name": "acceptDirectory",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "FileTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "FileTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "LegacyRef<HTMLInputElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/slider/slider.tsx",
    "description": "",
    "displayName": "Slider",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/slider/slider.tsx",
          "name": "SliderProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/slider/slider.tsx",
            "name": "SliderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "formatOptions": {
        "defaultValue": null,
        "description": "The display format of the value label.",
        "name": "formatOptions",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SliderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SliderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "NumberFormatOptions"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "The default value (uncontrolled).",
        "name": "defaultValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "number | number[]"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Handler that is called when the value changes.",
        "name": "onChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: number | number[]) => void"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the whole Slider is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
          "name": "SliderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
            "name": "SliderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The current value (controlled).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "number | number[]"
        }
      },
      "orientation": {
        "defaultValue": {
          "value": "'horizontal'"
        },
        "description": "The orientation of the Slider.",
        "name": "orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
          "name": "SliderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
            "name": "SliderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Orientation",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "step": {
        "defaultValue": {
          "value": "1"
        },
        "description": "The slider's step value.",
        "name": "step",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
          "name": "SliderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
            "name": "SliderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "minValue": {
        "defaultValue": {
          "value": "0"
        },
        "description": "The slider's minimum value.",
        "name": "minValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
          "name": "SliderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
            "name": "SliderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "maxValue": {
        "defaultValue": {
          "value": "100"
        },
        "description": "The slider's maximum value.",
        "name": "maxValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
          "name": "SliderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
            "name": "SliderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "onChangeEnd": {
        "defaultValue": null,
        "description": "Fired when the slider stops moving, due to being let go.",
        "name": "onChangeEnd",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
          "name": "SliderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+slider@3.7.2_react@18.3.1/node_modules/@react-types/slider/src/index.d.ts",
            "name": "SliderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: number | number[]) => void"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: SliderRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: SliderRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/checkbox/checkbox.tsx",
    "description": "",
    "displayName": "Checkbox",
    "methods": [],
    "props": {
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "LegacyRef<HTMLLabelElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/progress-bar/progress-bar.tsx",
    "description": "",
    "displayName": "ProgressBar",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "The styles to apply to the progress bar.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/progress-bar/progress-bar.tsx",
          "name": "ProgressBarProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/progress-bar/progress-bar.tsx",
            "name": "ProgressBarProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "label": {
        "defaultValue": null,
        "description": "A label to display above the progress bar.",
        "name": "label",
        "parent": {
          "fileName": "../src/components/ui/progress-bar/progress-bar.tsx",
          "name": "ProgressBarProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/progress-bar/progress-bar.tsx",
            "name": "ProgressBarProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "description": {
        "defaultValue": null,
        "description": "Description text to display below the progress bar.",
        "name": "description",
        "parent": {
          "fileName": "../src/components/ui/progress-bar/progress-bar.tsx",
          "name": "ProgressBarProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/progress-bar/progress-bar.tsx",
            "name": "ProgressBarProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactElement<HTMLElement, string | JSXElementConstructor<any>>"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "value": {
        "defaultValue": {
          "value": "0"
        },
        "description": "The current value (controlled).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
          "name": "ProgressBaseProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
            "name": "ProgressBaseProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "minValue": {
        "defaultValue": {
          "value": "0"
        },
        "description": "The smallest value allowed for the input.",
        "name": "minValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
          "name": "ProgressBaseProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
            "name": "ProgressBaseProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "maxValue": {
        "defaultValue": {
          "value": "100"
        },
        "description": "The largest value allowed for the input.",
        "name": "maxValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
          "name": "ProgressBaseProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
            "name": "ProgressBaseProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "formatOptions": {
        "defaultValue": {
          "value": "{style: 'percent'}"
        },
        "description": "The display format of the value label.",
        "name": "formatOptions",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
          "name": "ProgressBarBaseProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
            "name": "ProgressBarBaseProps"
          }
        ],
        "required": false,
        "type": {
          "name": "NumberFormatOptions"
        }
      },
      "isIndeterminate": {
        "defaultValue": null,
        "description": "Whether presentation is indeterminate when progress isn't known.",
        "name": "isIndeterminate",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
          "name": "ProgressBarProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
            "name": "ProgressBarProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "valueLabel": {
        "defaultValue": null,
        "description": "The content to display as the value's label (e.g. 1 of 4).",
        "name": "valueLabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
          "name": "ProgressBarBaseProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+progress@3.5.3_react@18.3.1/node_modules/@react-types/progress/src/index.d.ts",
            "name": "ProgressBarBaseProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: ProgressBarRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: ProgressBarRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/heading/heading.tsx",
    "description": "",
    "displayName": "HeadingLevel",
    "methods": [],
    "props": {
      "level": {
        "defaultValue": null,
        "description": "The heading level. By default, it'll increase the level by 1 based on the\ncontext.",
        "name": "level",
        "parent": {
          "fileName": "../src/components/ui/heading/heading-levels.tsx",
          "name": "HeadingLevelProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/heading/heading-levels.tsx",
            "name": "HeadingLevelProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "HeadingLevels",
          "value": [
            {
              "value": "4"
            },
            {
              "value": "1"
            },
            {
              "value": "2"
            },
            {
              "value": "3"
            },
            {
              "value": "5"
            },
            {
              "value": "6"
            }
          ]
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/heading/heading-levels.tsx",
    "description": "",
    "displayName": "HeadingLevel",
    "methods": [],
    "props": {
      "level": {
        "defaultValue": null,
        "description": "The heading level. By default, it'll increase the level by 1 based on the\ncontext.",
        "name": "level",
        "parent": {
          "fileName": "../src/components/ui/heading/heading-levels.tsx",
          "name": "HeadingLevelProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/heading/heading-levels.tsx",
            "name": "HeadingLevelProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "HeadingLevels",
          "value": [
            {
              "value": "4"
            },
            {
              "value": "1"
            },
            {
              "value": "2"
            },
            {
              "value": "3"
            },
            {
              "value": "5"
            },
            {
              "value": "6"
            }
          ]
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/separator/separator.tsx",
    "description": "",
    "displayName": "Separator",
    "methods": [],
    "props": {
      "orientation": {
        "defaultValue": {
          "value": "'horizontal'"
        },
        "description": "The orientation of the separator.",
        "name": "orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+separator@3.3.12_react@18.3.1/node_modules/@react-aria/separator/dist/types.d.ts",
          "name": "SeparatorProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+separator@3.3.12_react@18.3.1/node_modules/@react-aria/separator/dist/types.d.ts",
            "name": "SeparatorProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Orientation",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "elementType": {
        "defaultValue": null,
        "description": "The HTML element type that will be used to render the separator.",
        "name": "elementType",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+separator@3.3.12_react@18.3.1/node_modules/@react-aria/separator/dist/types.d.ts",
          "name": "SeparatorProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+separator@3.3.12_react@18.3.1/node_modules/@react-aria/separator/dist/types.d.ts",
            "name": "SeparatorProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element.",
        "name": "className",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/input/input.tsx",
    "description": "",
    "displayName": "Input",
    "methods": [],
    "props": {
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "LegacyRef<HTMLInputElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/highlight/highlight.tsx",
    "description": "Displays a Text with highlighted characters",
    "displayName": "Highlight",
    "methods": [],
    "props": {
      "children": {
        "defaultValue": null,
        "description": "Element that will be rendered highlighted.",
        "name": "children",
        "declarations": [
          {
            "fileName": "../src/components/ui/highlight/highlight.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": true,
        "type": {
          "name": "string"
        }
      },
      "highlight": {
        "defaultValue": {
          "value": ""
        },
        "description": "Elements characters that will be highlighted.",
        "name": "highlight",
        "declarations": [
          {
            "fileName": "../src/components/ui/highlight/highlight.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "string | string[]"
        }
      },
      "minLengthToHighlight": {
        "defaultValue": {
          "value": "0"
        },
        "description": "Minimum length to highlight,",
        "name": "minLengthToHighlight",
        "declarations": [
          {
            "fileName": "../src/components/ui/highlight/highlight.tsx",
            "name": "TypeLiteral"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/date-range-picker/date-range-picker.tsx",
    "description": "",
    "displayName": "DateRangePicker",
    "methods": [],
    "props": {
      "helperText": {
        "defaultValue": null,
        "description": "A helper text to display below the date picker.",
        "name": "helperText",
        "parent": {
          "fileName": "../src/components/ui/date-range-picker/date-range-picker.tsx",
          "name": "DateRangePickerProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/date-range-picker/date-range-picker.tsx",
            "name": "DateRangePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "errorMessage": {
        "defaultValue": null,
        "description": "The error message to display when the date picker is invalid.",
        "name": "errorMessage",
        "parent": {
          "fileName": "../src/components/ui/date-range-picker/date-range-picker.tsx",
          "name": "DateRangePickerProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/date-range-picker/date-range-picker.tsx",
            "name": "DateRangePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((validation: ValidationResult) => string)"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "The default value (uncontrolled).",
        "name": "defaultValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "RangeValue<T>"
        }
      },
      "autoFocus": {
        "defaultValue": null,
        "description": "Whether the element should receive focus on render.",
        "name": "autoFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusableProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusableProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Handler that is called when the element receives focus.",
        "name": "onFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Handler that is called when the element loses focus.",
        "name": "onBlur",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Handler that is called when the value changes.",
        "name": "onChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: RangeValue<MappedDateValue<T>>) => void"
        }
      },
      "onKeyDown": {
        "defaultValue": null,
        "description": "Handler that is called when a key is pressed.",
        "name": "onKeyDown",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "onKeyUp": {
        "defaultValue": null,
        "description": "Handler that is called when a key is released.",
        "name": "onKeyUp",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the input is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the element's focus status changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isFocused: boolean) => void"
        }
      },
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      },
      "isReadOnly": {
        "defaultValue": null,
        "description": "Whether the input can be selected but not changed by the user.",
        "name": "isReadOnly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isRequired": {
        "defaultValue": null,
        "description": "Whether user input is required on the input before form submission.",
        "name": "isRequired",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isInvalid": {
        "defaultValue": null,
        "description": "Whether the input value is invalid.",
        "name": "isInvalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "validate": {
        "defaultValue": null,
        "description": "A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.",
        "name": "validate",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: RangeValue<MappedDateValue<T>>) => true | ValidationError"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The current value (controlled).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "RangeValue<T>"
        }
      },
      "allowsNonContiguousRanges": {
        "defaultValue": null,
        "description": "When combined with `isDateUnavailable`, determines whether non-contiguous ranges,\ni.e. ranges containing unavailable dates, may be selected.",
        "name": "allowsNonContiguousRanges",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateRangePickerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateRangePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "minValue": {
        "defaultValue": null,
        "description": "The minimum allowed date that a user may select.",
        "name": "minValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "maxValue": {
        "defaultValue": null,
        "description": "The maximum allowed date that a user may select.",
        "name": "maxValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "isDateUnavailable": {
        "defaultValue": null,
        "description": "Callback that is called for each date of the calendar. If it returns true, then the date is unavailable.",
        "name": "isDateUnavailable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(date: DateValue) => boolean"
        }
      },
      "pageBehavior": {
        "defaultValue": {
          "value": "visible"
        },
        "description": "Controls the behavior of paging. Pagination either works by advancing the visible page by visibleDuration (default) or one unit of visibleDuration.",
        "name": "pageBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DatePickerBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DatePickerBase"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "PageBehavior",
          "value": [
            {
              "value": "\"single\""
            },
            {
              "value": "\"visible\""
            }
          ]
        }
      },
      "placeholderValue": {
        "defaultValue": null,
        "description": "A placeholder date that influences the format of the placeholder shown when no value is selected. Defaults to today's date at midnight.",
        "name": "placeholderValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "hourCycle": {
        "defaultValue": null,
        "description": "Whether to display the time in 12 or 24 hour format. By default, this is determined by the user's locale.",
        "name": "hourCycle",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "12 | 24",
          "value": [
            {
              "value": "12"
            },
            {
              "value": "24"
            }
          ]
        }
      },
      "granularity": {
        "defaultValue": null,
        "description": "Determines the smallest unit that is displayed in the date picker. By default, this is `\"day\"` for dates, and `\"minute\"` for times.",
        "name": "granularity",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Granularity",
          "value": [
            {
              "value": "\"day\""
            },
            {
              "value": "\"hour\""
            },
            {
              "value": "\"minute\""
            },
            {
              "value": "\"second\""
            }
          ]
        }
      },
      "hideTimeZone": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether to hide the time zone abbreviation.",
        "name": "hideTimeZone",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "shouldForceLeadingZeros": {
        "defaultValue": null,
        "description": "Whether to always show leading zeros in the month, day, and hour fields.\nBy default, this is determined by the user's locale.",
        "name": "shouldForceLeadingZeros",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "startName": {
        "defaultValue": null,
        "description": "The name of the start date input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",
        "name": "startName",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateRangePickerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateRangePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "endName": {
        "defaultValue": null,
        "description": "The name of the end date input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",
        "name": "endName",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateRangePickerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateRangePickerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "shouldCloseOnSelect": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Determines whether the date picker popover should close automatically when a date is selected.",
        "name": "shouldCloseOnSelect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-stately+datepicker@3.9.3_react@18.3.1/node_modules/@react-stately/datepicker/dist/types.d.ts",
          "name": "DateRangePickerStateOptions"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-stately+datepicker@3.9.3_react@18.3.1/node_modules/@react-stately/datepicker/dist/types.d.ts",
            "name": "DateRangePickerStateOptions"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | (() => boolean)"
        }
      },
      "validationBehavior": {
        "defaultValue": {
          "value": "'native'"
        },
        "description": "Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.",
        "name": "validationBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RACValidation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RACValidation"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"native\" | \"aria\"",
          "value": [
            {
              "value": "\"native\""
            },
            {
              "value": "\"aria\""
            }
          ]
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: DateRangePickerRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((values: DateRangePickerRenderProps & { defaultClassName: string; }) => string)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: DateRangePickerRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/card/card.tsx",
    "description": "",
    "displayName": "Card",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "LegacyRef<HTMLDivElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/card/card.tsx",
    "description": "",
    "displayName": "CardTitle",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLHeadingElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLHeadingElement>"
        }
      },
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "LegacyRef<HTMLParagraphElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/card/card.tsx",
    "description": "",
    "displayName": "CardContent",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "LegacyRef<HTMLDivElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/card/card.tsx",
    "description": "",
    "displayName": "CardDescription",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLParagraphElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLParagraphElement>"
        }
      },
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "LegacyRef<HTMLParagraphElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/card/card.tsx",
    "description": "",
    "displayName": "CardFooter",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "LegacyRef<HTMLDivElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/card/card.tsx",
    "description": "",
    "displayName": "CardHeader",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "LegacyRef<HTMLDivElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/calendar/calendar.tsx",
    "description": "",
    "displayName": "Calendar",
    "methods": [],
    "props": {
      "error": {
        "defaultValue": null,
        "description": "The error message to display if the calendar is invalid.",
        "name": "error",
        "parent": {
          "fileName": "../src/components/ui/calendar/calendar.tsx",
          "name": "CalendarProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/calendar/calendar.tsx",
            "name": "CalendarProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The styles of the calendar.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/calendar/calendar.tsx",
          "name": "CalendarProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/calendar/calendar.tsx",
            "name": "CalendarProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: CalendarRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "The default value (uncontrolled).",
        "name": "defaultValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "autoFocus": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether to automatically focus the calendar when it mounts.",
        "name": "autoFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: CalendarRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Handler that is called when the value changes.",
        "name": "onChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: DateValue) => void"
        }
      },
      "isDisabled": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether the calendar is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the focused date changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(date: CalendarDate) => void"
        }
      },
      "isReadOnly": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether the calendar value is immutable.",
        "name": "isReadOnly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isInvalid": {
        "defaultValue": null,
        "description": "Whether the current selection is invalid according to application logic.",
        "name": "isInvalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The current value (controlled).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "minValue": {
        "defaultValue": null,
        "description": "The minimum allowed date that a user may select.",
        "name": "minValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "maxValue": {
        "defaultValue": null,
        "description": "The maximum allowed date that a user may select.",
        "name": "maxValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "isDateUnavailable": {
        "defaultValue": null,
        "description": "Callback that is called for each date of the calendar. If it returns true, then the date is unavailable.",
        "name": "isDateUnavailable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(date: DateValue) => boolean"
        }
      },
      "focusedValue": {
        "defaultValue": null,
        "description": "Controls the currently focused date within the calendar.",
        "name": "focusedValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "defaultFocusedValue": {
        "defaultValue": null,
        "description": "The date that is focused when the calendar first mounts (uncountrolled).",
        "name": "defaultFocusedValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "pageBehavior": {
        "defaultValue": {
          "value": "visible"
        },
        "description": "Controls the behavior of paging. Pagination either works by advancing the visible page by visibleDuration (default) or one unit of visibleDuration.",
        "name": "pageBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
          "name": "CalendarPropsBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+calendar@3.4.5_react@18.3.1/node_modules/@react-types/calendar/src/index.d.ts",
            "name": "CalendarPropsBase"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "PageBehavior",
          "value": [
            {
              "value": "\"single\""
            },
            {
              "value": "\"visible\""
            }
          ]
        }
      },
      "visibleDuration": {
        "defaultValue": {
          "value": "{months: 1}"
        },
        "description": "The amount of days that will be displayed at once. This affects how pagination works.",
        "name": "visibleDuration",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "CalendarProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "CalendarProps"
          }
        ],
        "required": false,
        "type": {
          "name": "DateDuration"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/date-field/date-field.tsx",
    "description": "",
    "displayName": "DateField",
    "methods": [],
    "props": {
      "helperText": {
        "defaultValue": null,
        "description": "A helper text to display below the date field.",
        "name": "helperText",
        "parent": {
          "fileName": "../src/components/ui/date-field/date-field.tsx",
          "name": "DateFieldProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/date-field/date-field.tsx",
            "name": "DateFieldProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode"
        }
      },
      "errorMessage": {
        "defaultValue": null,
        "description": "The error message to display if the date field is invalid.",
        "name": "errorMessage",
        "parent": {
          "fileName": "../src/components/ui/date-field/date-field.tsx",
          "name": "DateFieldProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/date-field/date-field.tsx",
            "name": "DateFieldProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((validation: ValidationResult) => string)"
        }
      },
      "defaultValue": {
        "defaultValue": null,
        "description": "The default value (uncontrolled).",
        "name": "defaultValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "autoFocus": {
        "defaultValue": null,
        "description": "Whether the element should receive focus on render.",
        "name": "autoFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusableProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusableProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onFocus": {
        "defaultValue": null,
        "description": "Handler that is called when the element receives focus.",
        "name": "onFocus",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onBlur": {
        "defaultValue": null,
        "description": "Handler that is called when the element loses focus.",
        "name": "onBlur",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: FocusEvent<Element, Element>) => void"
        }
      },
      "onChange": {
        "defaultValue": null,
        "description": "Handler that is called when the value changes.",
        "name": "onChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: MappedDateValue<T>) => void"
        }
      },
      "onKeyDown": {
        "defaultValue": null,
        "description": "Handler that is called when a key is pressed.",
        "name": "onKeyDown",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "onKeyUp": {
        "defaultValue": null,
        "description": "Handler that is called when a key is released.",
        "name": "onKeyUp",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "KeyboardEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "KeyboardEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(e: KeyboardEvent) => void"
        }
      },
      "isDisabled": {
        "defaultValue": null,
        "description": "Whether the input is disabled.",
        "name": "isDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onFocusChange": {
        "defaultValue": null,
        "description": "Handler that is called when the element's focus status changes.",
        "name": "onFocusChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
          "name": "FocusEvents"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/events.d.ts",
            "name": "FocusEvents"
          }
        ],
        "required": false,
        "type": {
          "name": "(isFocused: boolean) => void"
        }
      },
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      },
      "isReadOnly": {
        "defaultValue": null,
        "description": "Whether the input can be selected but not changed by the user.",
        "name": "isReadOnly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "InputBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "InputBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "name": {
        "defaultValue": null,
        "description": "The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname).",
        "name": "name",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "InputDOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "InputDOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "isRequired": {
        "defaultValue": null,
        "description": "Whether user input is required on the input before form submission.",
        "name": "isRequired",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isInvalid": {
        "defaultValue": null,
        "description": "Whether the input value is invalid.",
        "name": "isInvalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "validate": {
        "defaultValue": null,
        "description": "A function that returns an error message if a given value is invalid.\nValidation errors are displayed to the user when the form is submitted\nif `validationBehavior=\"native\"`. For realtime validation, use the `isInvalid`\nprop instead.",
        "name": "validate",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "Validation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "Validation"
          }
        ],
        "required": false,
        "type": {
          "name": "(value: MappedDateValue<T>) => true | ValidationError"
        }
      },
      "value": {
        "defaultValue": null,
        "description": "The current value (controlled).",
        "name": "value",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
          "name": "ValueBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/inputs.d.ts",
            "name": "ValueBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "minValue": {
        "defaultValue": null,
        "description": "The minimum allowed date that a user may select.",
        "name": "minValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "maxValue": {
        "defaultValue": null,
        "description": "The maximum allowed date that a user may select.",
        "name": "maxValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "isDateUnavailable": {
        "defaultValue": null,
        "description": "Callback that is called for each date of the calendar. If it returns true, then the date is unavailable.",
        "name": "isDateUnavailable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "(date: DateValue) => boolean"
        }
      },
      "placeholderValue": {
        "defaultValue": null,
        "description": "A placeholder date that influences the format of the placeholder shown when no value is selected. Defaults to today's date at midnight.",
        "name": "placeholderValue",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "DateValue"
        }
      },
      "hourCycle": {
        "defaultValue": null,
        "description": "Whether to display the time in 12 or 24 hour format. By default, this is determined by the user's locale.",
        "name": "hourCycle",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "12 | 24",
          "value": [
            {
              "value": "12"
            },
            {
              "value": "24"
            }
          ]
        }
      },
      "granularity": {
        "defaultValue": null,
        "description": "Determines the smallest unit that is displayed in the date picker. By default, this is `\"day\"` for dates, and `\"minute\"` for times.",
        "name": "granularity",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Granularity",
          "value": [
            {
              "value": "\"day\""
            },
            {
              "value": "\"hour\""
            },
            {
              "value": "\"minute\""
            },
            {
              "value": "\"second\""
            }
          ]
        }
      },
      "hideTimeZone": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether to hide the time zone abbreviation.",
        "name": "hideTimeZone",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "shouldForceLeadingZeros": {
        "defaultValue": null,
        "description": "Whether to always show leading zeros in the month, day, and hour fields.\nBy default, this is determined by the user's locale.",
        "name": "shouldForceLeadingZeros",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
          "name": "DateFieldBase"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+datepicker@3.7.3_react@18.3.1/node_modules/@react-types/datepicker/src/index.d.ts",
            "name": "DateFieldBase"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "validationBehavior": {
        "defaultValue": {
          "value": "'native'"
        },
        "description": "Whether to use native HTML form validation to prevent form submission\nwhen the value is missing or invalid, or mark the field as required\nor invalid via ARIA.",
        "name": "validationBehavior",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RACValidation"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RACValidation"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"native\" | \"aria\"",
          "value": [
            {
              "value": "\"native\""
            },
            {
              "value": "\"aria\""
            }
          ]
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: DateFieldRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string | ((values: DateFieldRenderProps & { defaultClassName: string; }) => string)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: DateFieldRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/tooltip/tooltip.tsx",
    "description": "",
    "displayName": "Tooltip",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "The styles to be applied to the tooltip root.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/tooltip/tooltip.tsx",
          "name": "TooltipProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/tooltip/tooltip.tsx",
            "name": "TooltipProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "triggerRef": {
        "defaultValue": null,
        "description": "The ref for the element which the tooltip positions itself with respect to.\n\nWhen used within a TooltipTrigger this is set automatically. It is only required when used standalone.",
        "name": "triggerRef",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "TooltipProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "TooltipProps"
          }
        ],
        "required": false,
        "type": {
          "name": "RefObject<Element>"
        }
      },
      "isEntering": {
        "defaultValue": null,
        "description": "Whether the tooltip is currently performing an entry animation.",
        "name": "isEntering",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "TooltipProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "TooltipProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isExiting": {
        "defaultValue": null,
        "description": "Whether the tooltip is currently performing an exit animation.",
        "name": "isExiting",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "TooltipProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "TooltipProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "UNSTABLE_portalContainer": {
        "defaultValue": {
          "value": "document.body"
        },
        "description": "The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.",
        "name": "UNSTABLE_portalContainer",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "TooltipProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "TooltipProps"
          }
        ],
        "required": false,
        "type": {
          "name": "Element"
        }
      },
      "placement": {
        "defaultValue": {
          "value": "'bottom'"
        },
        "description": "The placement of the element with respect to its anchor element.",
        "name": "placement",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "Placement",
          "value": [
            {
              "value": "\"end\""
            },
            {
              "value": "\"bottom\""
            },
            {
              "value": "\"bottom left\""
            },
            {
              "value": "\"bottom right\""
            },
            {
              "value": "\"bottom start\""
            },
            {
              "value": "\"bottom end\""
            },
            {
              "value": "\"top\""
            },
            {
              "value": "\"top left\""
            },
            {
              "value": "\"top right\""
            },
            {
              "value": "\"top start\""
            },
            {
              "value": "\"top end\""
            },
            {
              "value": "\"left\""
            },
            {
              "value": "\"left top\""
            },
            {
              "value": "\"left bottom\""
            },
            {
              "value": "\"start\""
            },
            {
              "value": "\"start top\""
            },
            {
              "value": "\"start bottom\""
            },
            {
              "value": "\"right\""
            },
            {
              "value": "\"right top\""
            },
            {
              "value": "\"right bottom\""
            },
            {
              "value": "\"end top\""
            },
            {
              "value": "\"end bottom\""
            }
          ]
        }
      },
      "containerPadding": {
        "defaultValue": {
          "value": "12"
        },
        "description": "The placement padding that should be applied between the element and its\nsurrounding container.",
        "name": "containerPadding",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "offset": {
        "defaultValue": {
          "value": "0"
        },
        "description": "The additional offset applied along the main axis between the element and its\nanchor element.",
        "name": "offset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "crossOffset": {
        "defaultValue": {
          "value": "0"
        },
        "description": "The additional offset applied along the cross axis between the element and its\nanchor element.",
        "name": "crossOffset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "shouldFlip": {
        "defaultValue": {
          "value": "true"
        },
        "description": "Whether the element should flip its orientation (e.g. top to bottom or left to right) when\nthere is insufficient room for it to render completely.",
        "name": "shouldFlip",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the element is rendered.",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "PositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "PositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "arrowBoundaryOffset": {
        "defaultValue": {
          "value": "0"
        },
        "description": "The minimum distance the arrow's edge should be from the edge of the overlay element.",
        "name": "arrowBoundaryOffset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaPositionProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaPositionProps"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: TooltipRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: TooltipRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/drawer/drawer.tsx",
    "description": "",
    "displayName": "Drawer",
    "methods": [],
    "props": {
      "placement": {
        "defaultValue": null,
        "description": "The placement of the drawer.",
        "name": "placement",
        "parent": {
          "fileName": "../src/components/ui/drawer/drawer.tsx",
          "name": "DrawerProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/drawer/drawer.tsx",
            "name": "DrawerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "any"
        }
      },
      "className": {
        "defaultValue": null,
        "description": "The CSS [className](https://developer.mozilla.org/en-US/docs/Web/API/Element/className) for the element. A function may be provided to compute the class based on component state.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/modal/modal.tsx",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/modal/modal.tsx",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "isEntering": {
        "defaultValue": null,
        "description": "Whether the modal is currently performing an entry animation.",
        "name": "isEntering",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isExiting": {
        "defaultValue": null,
        "description": "Whether the modal is currently performing an exit animation.",
        "name": "isExiting",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "UNSTABLE_portalContainer": {
        "defaultValue": {
          "value": "document.body"
        },
        "description": "The container element in which the overlay portal will be placed. This may have unknown behavior depending on where it is portalled to.",
        "name": "UNSTABLE_portalContainer",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "ModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "ModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "Element"
        }
      },
      "isDismissable": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether to close the modal when the user interacts outside it.",
        "name": "isDismissable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "isKeyboardDismissDisabled": {
        "defaultValue": {
          "value": "false"
        },
        "description": "Whether pressing the escape key to close the modal should be disabled.",
        "name": "isKeyboardDismissDisabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaModalOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaModalOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "shouldCloseOnInteractOutside": {
        "defaultValue": null,
        "description": "When user interacts with the argument element outside of the overlay ref,\nreturn true if onClose should be called.  This gives you a chance to filter\nout interaction with elements that should not dismiss the overlay.\nBy default, onClose will always be called on interaction outside the overlay ref.",
        "name": "shouldCloseOnInteractOutside",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
          "name": "AriaOverlayProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-aria+overlays@3.22.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@react-aria/overlays/dist/types.d.ts",
            "name": "AriaOverlayProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(element: Element) => boolean"
        }
      },
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "The children of the component. A function may be provided to alter the children based on component state.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "RenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "RenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((values: ModalRenderProps & { defaultChildren: ReactNode; }) => ReactNode)"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element. A function may be provided to compute the style based on component state.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleRenderProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleRenderProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties | ((values: ModalRenderProps & { defaultStyle: CSSProperties; }) => CSSProperties)"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/drawer/drawer.tsx",
    "description": "",
    "displayName": "DrawerContent",
    "methods": [],
    "props": {
      "className": {
        "defaultValue": null,
        "description": "Class name to apply to the Dialog.",
        "name": "className",
        "parent": {
          "fileName": "../src/components/ui/dialog/dialog.tsx",
          "name": "DialogContentProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/dialog/dialog.tsx",
            "name": "DialogContentProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "closeButtonClassName": {
        "defaultValue": null,
        "description": "Class name to apply to the close button.",
        "name": "closeButtonClassName",
        "parent": {
          "fileName": "../src/components/ui/dialog/dialog.tsx",
          "name": "DialogContentProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/dialog/dialog.tsx",
            "name": "DialogContentProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "hideCloseButton": {
        "defaultValue": null,
        "description": "Hides default close button. It will not affect the functionality of the ESC key!",
        "name": "hideCloseButton",
        "parent": {
          "fileName": "../src/components/ui/dialog/dialog.tsx",
          "name": "DialogContentProps"
        },
        "declarations": [
          {
            "fileName": "../src/components/ui/dialog/dialog.tsx",
            "name": "DialogContentProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "children": {
        "defaultValue": null,
        "description": "Children of the dialog. A function may be provided to access a function to close the dialog.",
        "name": "children",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "DialogProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "DialogProps"
          }
        ],
        "required": false,
        "type": {
          "name": "ReactNode | ((opts: DialogRenderProps) => ReactNode)"
        }
      },
      "role": {
        "defaultValue": {
          "value": "'dialog'"
        },
        "description": "The accessibility role for the dialog.",
        "name": "role",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+dialog@3.5.9_react@18.3.1/node_modules/@react-types/dialog/src/index.d.ts",
          "name": "AriaDialogProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+dialog@3.5.9_react@18.3.1/node_modules/@react-types/dialog/src/index.d.ts",
            "name": "AriaDialogProps"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"dialog\" | \"alertdialog\"",
          "value": [
            {
              "value": "\"dialog\""
            },
            {
              "value": "\"alertdialog\""
            }
          ]
        }
      },
      "id": {
        "defaultValue": null,
        "description": "The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id).",
        "name": "id",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "DOMProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "DOMProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that provide a detailed, extended description for the object.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
          "name": "AriaLabelingProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+shared@3.23.0_react@18.3.1/node_modules/@react-types/shared/src/dom.d.ts",
            "name": "AriaLabelingProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "style": {
        "defaultValue": null,
        "description": "The inline [style](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style) for the element.",
        "name": "style",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "StyleProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "StyleProps"
          }
        ],
        "required": false,
        "type": {
          "name": "CSSProperties"
        }
      },
      "slot": {
        "defaultValue": null,
        "description": "A slot name for the component. Slots allow the component to receive props from a parent component.\nAn explicit `null` value indicates that the local props completely override all props received from a parent.",
        "name": "slot",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
          "name": "SlotProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/react-aria-components@1.2.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/react-aria-components/dist/types.d.ts",
            "name": "SlotProps"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/drawer/drawer.tsx",
    "description": "",
    "displayName": "DrawerHeader",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/drawer/drawer.tsx",
    "description": "",
    "displayName": "DrawerTitle",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/drawer/drawer.tsx",
    "description": "A DialogTrigger opens a dialog when a trigger element is pressed.",
    "displayName": "DialogTrigger",
    "methods": [],
    "props": {
      "isOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (controlled).",
        "name": "isOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "defaultOpen": {
        "defaultValue": null,
        "description": "Whether the overlay is open by default (uncontrolled).",
        "name": "defaultOpen",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean"
        }
      },
      "onOpenChange": {
        "defaultValue": null,
        "description": "Handler that is called when the overlay's open state changes.",
        "name": "onOpenChange",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
          "name": "OverlayTriggerProps"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@react-types+overlays@3.8.6_react@18.3.1/node_modules/@react-types/overlays/src/index.d.ts",
            "name": "OverlayTriggerProps"
          }
        ],
        "required": false,
        "type": {
          "name": "(isOpen: boolean) => void"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/drawer/drawer.tsx",
    "description": "",
    "displayName": "DrawerFooter",
    "methods": [],
    "props": {
      "inputMode": {
        "defaultValue": null,
        "description": "Hints at the type of data that might be entered by the user while editing the element or its contents\n@see {@link https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute}",
        "name": "inputMode",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"search\" | \"text\" | \"none\" | \"tel\" | \"url\" | \"email\" | \"numeric\" | \"decimal\"",
          "value": [
            {
              "value": "\"search\""
            },
            {
              "value": "\"text\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"tel\""
            },
            {
              "value": "\"url\""
            },
            {
              "value": "\"email\""
            },
            {
              "value": "\"numeric\""
            },
            {
              "value": "\"decimal\""
            }
          ]
        }
      },
      "is": {
        "defaultValue": null,
        "description": "Specify that a standard HTML element should behave like a defined custom built-in element\n@see {@link https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is}",
        "name": "is",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "HTMLAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "HTMLAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-activedescendant": {
        "defaultValue": null,
        "description": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
        "name": "aria-activedescendant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-atomic": {
        "defaultValue": null,
        "description": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
        "name": "aria-atomic",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-autocomplete": {
        "defaultValue": null,
        "description": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
        "name": "aria-autocomplete",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"list\" | \"none\" | \"inline\" | \"both\"",
          "value": [
            {
              "value": "\"list\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"inline\""
            },
            {
              "value": "\"both\""
            }
          ]
        }
      },
      "aria-braillelabel": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element, which is intended to be converted into Braille.\n@see aria-label.",
        "name": "aria-braillelabel",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-brailleroledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille.\n@see aria-roledescription.",
        "name": "aria-brailleroledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-checked": {
        "defaultValue": null,
        "description": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.",
        "name": "aria-checked",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-colcount": {
        "defaultValue": null,
        "description": "Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.",
        "name": "aria-colcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindex": {
        "defaultValue": null,
        "description": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
        "name": "aria-colindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-colindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-colindex.\n@see aria-rowindextext.",
        "name": "aria-colindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-colspan": {
        "defaultValue": null,
        "description": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.",
        "name": "aria-colspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-controls": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.",
        "name": "aria-controls",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-current": {
        "defaultValue": null,
        "description": "Indicates the element that represents the current item within a container or set of related elements.",
        "name": "aria-current",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"time\" | \"step\" | \"true\" | \"false\" | \"page\" | \"location\" | \"date\""
        }
      },
      "aria-describedby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that describes the object.\n@see aria-labelledby",
        "name": "aria-describedby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-description": {
        "defaultValue": null,
        "description": "Defines a string value that describes or annotates the current element.\n@see related aria-describedby.",
        "name": "aria-description",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-details": {
        "defaultValue": null,
        "description": "Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.",
        "name": "aria-details",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-disabled": {
        "defaultValue": null,
        "description": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.",
        "name": "aria-disabled",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-dropeffect": {
        "defaultValue": null,
        "description": "Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1",
        "name": "aria-dropeffect",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"link\" | \"none\" | \"copy\" | \"execute\" | \"move\" | \"popup\"",
          "value": [
            {
              "value": "\"link\""
            },
            {
              "value": "\"none\""
            },
            {
              "value": "\"copy\""
            },
            {
              "value": "\"execute\""
            },
            {
              "value": "\"move\""
            },
            {
              "value": "\"popup\""
            }
          ]
        }
      },
      "aria-errormessage": {
        "defaultValue": null,
        "description": "Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.",
        "name": "aria-errormessage",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-expanded": {
        "defaultValue": null,
        "description": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
        "name": "aria-expanded",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-flowto": {
        "defaultValue": null,
        "description": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
        "name": "aria-flowto",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-grabbed": {
        "defaultValue": null,
        "description": "Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1",
        "name": "aria-grabbed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-haspopup": {
        "defaultValue": null,
        "description": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
        "name": "aria-haspopup",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"dialog\" | \"menu\" | \"true\" | \"false\" | \"grid\" | \"listbox\" | \"tree\""
        }
      },
      "aria-hidden": {
        "defaultValue": null,
        "description": "Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.",
        "name": "aria-hidden",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-invalid": {
        "defaultValue": null,
        "description": "Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.",
        "name": "aria-invalid",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"grammar\" | \"spelling\""
        }
      },
      "aria-keyshortcuts": {
        "defaultValue": null,
        "description": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
        "name": "aria-keyshortcuts",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-label": {
        "defaultValue": null,
        "description": "Defines a string value that labels the current element.\n@see aria-labelledby.",
        "name": "aria-label",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-labelledby": {
        "defaultValue": null,
        "description": "Identifies the element (or elements) that labels the current element.\n@see aria-describedby.",
        "name": "aria-labelledby",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-level": {
        "defaultValue": null,
        "description": "Defines the hierarchical level of an element within a structure.",
        "name": "aria-level",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-live": {
        "defaultValue": null,
        "description": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
        "name": "aria-live",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"off\" | \"assertive\" | \"polite\"",
          "value": [
            {
              "value": "\"off\""
            },
            {
              "value": "\"assertive\""
            },
            {
              "value": "\"polite\""
            }
          ]
        }
      },
      "aria-modal": {
        "defaultValue": null,
        "description": "Indicates whether an element is modal when displayed.",
        "name": "aria-modal",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiline": {
        "defaultValue": null,
        "description": "Indicates whether a text box accepts multiple lines of input or only a single line.",
        "name": "aria-multiline",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-multiselectable": {
        "defaultValue": null,
        "description": "Indicates that the user may select more than one item from the current selectable descendants.",
        "name": "aria-multiselectable",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-orientation": {
        "defaultValue": null,
        "description": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
        "name": "aria-orientation",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"horizontal\" | \"vertical\"",
          "value": [
            {
              "value": "\"horizontal\""
            },
            {
              "value": "\"vertical\""
            }
          ]
        }
      },
      "aria-owns": {
        "defaultValue": null,
        "description": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.",
        "name": "aria-owns",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-placeholder": {
        "defaultValue": null,
        "description": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.",
        "name": "aria-placeholder",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-posinset": {
        "defaultValue": null,
        "description": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
        "name": "aria-posinset",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-pressed": {
        "defaultValue": null,
        "description": "Indicates the current \"pressed\" state of toggle buttons.\n@see aria-checked\n@see aria-selected.",
        "name": "aria-pressed",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "boolean | \"true\" | \"false\" | \"mixed\""
        }
      },
      "aria-readonly": {
        "defaultValue": null,
        "description": "Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.",
        "name": "aria-readonly",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-relevant": {
        "defaultValue": null,
        "description": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.",
        "name": "aria-relevant",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"text\" | \"additions\" | \"additions removals\" | \"additions text\" | \"all\" | \"removals\" | \"removals additions\" | \"removals text\" | \"text additions\" | \"text removals\"",
          "value": [
            {
              "value": "\"text\""
            },
            {
              "value": "\"additions\""
            },
            {
              "value": "\"additions removals\""
            },
            {
              "value": "\"additions text\""
            },
            {
              "value": "\"all\""
            },
            {
              "value": "\"removals\""
            },
            {
              "value": "\"removals additions\""
            },
            {
              "value": "\"removals text\""
            },
            {
              "value": "\"text additions\""
            },
            {
              "value": "\"text removals\""
            }
          ]
        }
      },
      "aria-required": {
        "defaultValue": null,
        "description": "Indicates that user input is required on the element before a form may be submitted.",
        "name": "aria-required",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-roledescription": {
        "defaultValue": null,
        "description": "Defines a human-readable, author-localized description for the role of an element.",
        "name": "aria-roledescription",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowcount": {
        "defaultValue": null,
        "description": "Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.",
        "name": "aria-rowcount",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindex": {
        "defaultValue": null,
        "description": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
        "name": "aria-rowindex",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-rowindextext": {
        "defaultValue": null,
        "description": "Defines a human readable text alternative of aria-rowindex.\n@see aria-colindextext.",
        "name": "aria-rowindextext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "aria-rowspan": {
        "defaultValue": null,
        "description": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.",
        "name": "aria-rowspan",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-selected": {
        "defaultValue": null,
        "description": "Indicates the current \"selected\" state of various widgets.\n@see aria-checked\n@see aria-pressed.",
        "name": "aria-selected",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "Booleanish"
        }
      },
      "aria-setsize": {
        "defaultValue": null,
        "description": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.",
        "name": "aria-setsize",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-sort": {
        "defaultValue": null,
        "description": "Indicates if items in a table or grid are sorted in ascending or descending order.",
        "name": "aria-sort",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "enum",
          "raw": "\"none\" | \"ascending\" | \"descending\" | \"other\"",
          "value": [
            {
              "value": "\"none\""
            },
            {
              "value": "\"ascending\""
            },
            {
              "value": "\"descending\""
            },
            {
              "value": "\"other\""
            }
          ]
        }
      },
      "aria-valuemax": {
        "defaultValue": null,
        "description": "Defines the maximum allowed value for a range widget.",
        "name": "aria-valuemax",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuemin": {
        "defaultValue": null,
        "description": "Defines the minimum allowed value for a range widget.",
        "name": "aria-valuemin",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuenow": {
        "defaultValue": null,
        "description": "Defines the current value for a range widget.\n@see aria-valuetext.",
        "name": "aria-valuenow",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "number"
        }
      },
      "aria-valuetext": {
        "defaultValue": null,
        "description": "Defines the human readable text alternative of aria-valuenow for a range widget.",
        "name": "aria-valuetext",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "AriaAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "AriaAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "string"
        }
      },
      "onKeyPress": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPress",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      },
      "onKeyPressCapture": {
        "defaultValue": null,
        "description": "@deprecated",
        "name": "onKeyPressCapture",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "DOMAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "DOMAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "KeyboardEventHandler<HTMLDivElement>"
        }
      }
    }
  },
  {
    "tags": {},
    "filePath": "../src/components/ui/kbd/kbd.tsx",
    "description": "",
    "displayName": "Kbd",
    "methods": [],
    "props": {
      "ref": {
        "defaultValue": null,
        "description": "Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null`\n(or call the ref with `null` if you passed a callback ref).\n@see {@link https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom React Docs}",
        "name": "ref",
        "parent": {
          "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
          "name": "RefAttributes"
        },
        "declarations": [
          {
            "fileName": "pixelshades/node_modules/.pnpm/@types+react@18.3.1/node_modules/@types/react/index.d.ts",
            "name": "RefAttributes"
          }
        ],
        "required": false,
        "type": {
          "name": "LegacyRef<HTMLElement>"
        }
      }
    }
  }
]